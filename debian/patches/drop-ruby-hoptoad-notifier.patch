Description: drop depends on ruby-hoptoad-notifier
--- a/src/api/app/jobs/create_job.rb
+++ b/src/api/app/jobs/create_job.rb
@@ -19,6 +19,5 @@
       puts exception.inspect, exception.backtrace
       return
     end
-    HoptoadNotifier.notify(exception, {failed_job: job.inspect})
   end
 end
--- a/src/api/Gemfile
+++ b/src/api/Gemfile
@@ -11,8 +11,6 @@
 gem 'nokogiri', '>=1.6.7'
 # for delayed tasks
 gem 'delayed_job_active_record', '>= 4.0.0'
-# to fill errbit
-gem 'hoptoad_notifier', "~> 2.3"
 # as JSON library - the default json conflicts with activerecord (by means of vice-versa monkey patching)
 gem 'yajl-ruby'
 # to search the database
--- a/src/api/app/models/update_notification_events.rb
+++ b/src/api/app/models/update_notification_events.rb
@@ -24,7 +24,6 @@
     rescue ActiveRecord::StatementInvalid => e
       retries = retries - 1
       retry if retries > 0
-      HoptoadNotifier.notify(e, {failed_job: "RETRYED 10 times: #{type.inspect}"})
       return
     rescue => e
       if Rails.env.test?
@@ -32,7 +31,6 @@
         Rails.logger.error "ERROR: #{e.inspect}: #{e.backtrace}"
         puts e.inspect, e.backtrace
       end
-      HoptoadNotifier.notify(e, {failed_job: type.inspect})
       return
     end
 
--- a/src/api/config/initializers/hoptoad.rb
+++ b/src/api/config/initializers/hoptoad.rb
@@ -1,35 +1 @@
-HoptoadNotifier.configure do |config|
-  # Change this to some sensible data for your errbit instance
-  config.api_key = CONFIG['errbit_api_key'] || 'YOUR_ERRBIT_API_KEY'
-  config.host    = CONFIG['errbit_host'] || 'YOUR_ERRBIT_HOST'
-  if CONFIG['errbit_api_key'].blank?
-    config.development_environments = "production development test"
-  else
-    config.development_environments = "development test"
-  end
 
-  config.ignore_only = %w{
-  ActiveRecord::RecordNotFound
-  ActionController::InvalidAuthenticityToken
-  CGI::Session::CookieStore::TamperedWithCookie
-  ActionController::UnknownAction
-  AbstractController::ActionNotFound
-  ActionView::MissingTemplate
-  Timeout::Error
-  Net::HTTPBadResponse
-  WebuiMatcher::InvalidRequestFormat
-  ActionController::UnknownFormat
-  ActivXML::Transport::NotFoundError
-  }
-
-  config.ignore_by_filter do |exception_data|
-    ret=false
-    if exception_data[:error_class] == "ActionController::RoutingError"
-      message = exception_data[:error_message]
-      ret=true if message =~ %r{Required Parameter}
-      ret=true if message =~ %r{\[GET\]}
-      ret=true if message =~ %r{Expected AJAX call}
-    end
-    ret
-  end
-end
