#!/bin/sh -e

if ! getent group obsrun > /dev/null; then
    addgroup --system --quiet obsrun
fi

if ! getent passwd obsrun > /dev/null; then
    adduser --system --quiet \
        --ingroup obsrun --shell /bin/false \
        --home /usr/lib/obs --no-create-home \
        --shell /bin/false obsrun
    usermod -c "User for build service backend" obsrun
fi

if ! getent passwd obsservicerun > /dev/null; then
    adduser --system --quiet \
        --ingroup obsrun --shell /bin/false \
        --home /usr/lib/obs/server --no-create-home \
        --shell /bin/false obsservicerun
    usermod -c "User for obs source service server" obsservicerun
fi

mkdir -p /srv/obs/repos
chown obsrun:obsrun /srv/obs/repos

# Start up schedulers
#deb-systemd-helper enable obsscheduler\@i586.service
#deb-systemd-helper enable obsscheduler\@x86_64.service
#deb-systemd-helper enable obsscheduler\@armv7hl.service
# FIXME manually creating symlink, deb-systemd-helper does not support
# template services yet. See #801822
# FIXME make sure multi-user.target.wants directory created before creating symlink. See #870841
mkdir -p /etc/systemd/system/multi-user.target.wants
ln -sf /lib/systemd/system/obsscheduler@.service \
   /etc/systemd/system/multi-user.target.wants/obsscheduler\@i586.service
ln -sf /lib/systemd/system/obsscheduler@.service \
   /etc/systemd/system/multi-user.target.wants/obsscheduler\@x86_64.service
ln -sf /lib/systemd/system/obsscheduler@.service \
   /etc/systemd/system/multi-user.target.wants/obsscheduler\@armv7hl.service
# tell systemd to reload
if [ -d /run/systemd/system ]; then
  systemctl --system daemon-reload >/dev/null || true
fi
invoke-rc.d obsscheduler@i586 start || true
invoke-rc.d obsscheduler@x86_64 start || true
invoke-rc.d obsscheduler@armv7hl start || true

#DEBHELPER#

