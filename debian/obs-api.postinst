#!/bin/sh -e

. /usr/share/debconf/confmodule
. /usr/share/dbconfig-common/dpkg/postinst.mysql
dbc_generate_include=template:/etc/obs/api/config/database.yml
dbc_generate_include_args="-o template_infile=/etc/obs/api/config/database.yml.example"
dbc_generate_include_owner=www-data
dbc_go obs-api $@

chown www-data:root /etc/obs/api/config/environment.rb

if [ ! -f /var/log/obs ] ; then
  ln -fs /usr/share/obs/api/log /var/log/obs
fi
if [ ! -f /var/cache/obs/tmp ] ; then
  mkdir -p /var/cache/obs
  ln -fs /usr/share/obs/api/tmp /var/cache/obs/tmp
fi
# Generate log files
  touch /var/log/obs/access.log
  touch /var/log/obs/backend_access.log
  touch /var/log/obs/delayed_job.log
  touch /var/log/obs/error.log
  touch /var/log/obs/lastevents.access.log
  touch /var/log/obs/production.log
  chown -R nobody:www-data /var/log/obs/ /var/cache/obs/tmp/
  chmod 664 /var/log/obs/*.log
  chown nobody:root /usr/share/obs/api/config/database.yml

SECRET_KEY="/usr/share/obs/api/config/secret.key"
if [ ! -e "$SECRET_KEY" ]; then
    ( umask 0077; dd if=/dev/urandom bs=256 count=1 2>/dev/null |sha256sum| cut -d\  -f 1 >$SECRET_KEY )
fi
  chmod 0640 $SECRET_KEY
  chown nobody:www-data $SECRET_KEY

# Generate Gemfile.lock file.
cd /usr/share/obs/api
rm -f Gemfile.lock
rm -f .bundle/config
bundle --local --quiet

export BUNDLE_WITHOUT=test:assets:development
export BUNDLE_FROZEN=1
bundle config --local frozen 1
bundle config --local without test:assets:development

if [ -z "$2" ]; then
    RAILS_ENV=production rake -f /usr/share/obs/api/Rakefile db:create
    RAILS_ENV=production rake -f /usr/share/obs/api/Rakefile db:setup
else
    RAILS_ENV=production rake -f /usr/share/obs/api/Rakefile db:migrate
fi

bundle exec rake assets:precompile RAILS_ENV=production RAILS_GROUPS=assets

pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
        if [ -x "$p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$OLDIFS"
    return 1
}

if [ ! -f /usr/share/obs/overview/index.html ] ; then
  FQHOSTNAME=`hostname -f`

  sed -e "s,___API_URL___,https://$FQHOSTNAME,g" \
      -e "s,___REPO_URL___,http://$FQHOSTNAME:82,g" \
        /usr/share/obs/overview/overview.html.TEMPLATE > /usr/share/obs/overview/index.html
fi

pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
        if [ -x "$p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$OLDIFS"
    return 1
}

# Test whether a2enmod is available (and thus also apache2ctl).
if `pathfind a2enmod`; then
        # Enable the Apache2 modules if not already enabled
        a2enmod ssl     > /dev/null || true
        a2enmod rewrite > /dev/null || true
        a2enmod proxy   > /dev/null || true
        a2enmod proxy_http      > /dev/null || true
        a2enmod xforward        > /dev/null || true
        a2enmod headers > /dev/null || true
        a2enmod expires > /dev/null || true
        a2dissite 000-default   > /dev/null || true
	a2ensite obs.conf	> /dev/null || true
fi

reload_apache()
{
    if apache2ctl configtest 2>/dev/null; then
        if `pathfind defoma-font`; then
            invoke-rc.d apache2 $1 3>/dev/null || true
        else
            /etc/init.d/apache2 $1 3>/dev/null || true
        fi
    else
        echo "Your Apache 2 configuration is broken, so we're not restarting it for you."
    fi
}

# Restart Apache to really enable the module and load obs.conf
reload_apache restart

#DEBHELPER#
