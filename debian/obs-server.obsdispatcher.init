#! /bin/sh
# Copyright (c) 2007, Novell Inc.
#
# Author: adrian@suse.de
#         Martin Mohring <martin.mohring@5etech.eu>
#         Susanne Oberhauser  <froh@novell.com>
#
# /etc/init.d/obsdispatcher
#   and its symbolic  link
# /usr/sbin/rcobsdispatcher
#
### BEGIN INIT INFO
# Provides:          obsdispatcher
# Required-Start:    $time $syslog obsrepserver
# Should-Start:      obssrcserver obsscheduler $remote_fs
# Should-Stop:       $none
# Required-Stop:     $null
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       open build service job dispatcher
### END INIT INFO

#. /etc/rc.status

. /etc/default/obs-server

. /lib/lsb/init-functions

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}

if [ -z "$OBS_RUN_DIR" ]; then
        OBS_RUN_DIR="/srv/obs/run"
fi

if [ -z "$OBS_LOG_DIR" ]; then
        OBS_LOG_DIR="/srv/obs/log"
fi

if [ -n "$OBS_BACKENDCODE_DIR" ]; then
	obsdir="$OBS_BACKENDCODE_DIR"
else
	obsdir=/usr/lib/obs/server/
fi
rundir="$OBS_RUN_DIR"
logdir="$OBS_LOG_DIR"

case "$1" in
    start)
		echo "Initializing obsdispatcher"
                # FIXME: not nice, this should receive a proper daemon handling,
                #        including real logging, pid file and startproc
	        start-stop-daemon --start -b -x /usr/sbin/wrap-obs-service -- bs_dispatch "$obsdir" "$logdir"
	;;
	stop)
		echo "Shutting down obsdispatcher"
		"$obsdir"/bs_dispatch --stop
	;;
	restart)
		## If first returns OK call the second, if first or
		## second command fails, set echo return value.
		"$obsdir"/bs_dispatch --restart
	;;
	try-restart)
		$0 status
		if test $? = 0; then
			$0 restart
		else
			rc_reset        # Not running is not a failure.
		fi
		# Remember status and be quiet
	;;
	reload)
	;;
	status)
		echo "Checking for obsdispatcher:"
		status_of_proc "$obsdir/bs_dispatch" "OBS Dispatcher" && exit 0 || exit $?
	;;
	*)
		echo "Usage: $0 {start|stop|status|try-restart|restart|reload}"
		exit 1
	;;
esac
