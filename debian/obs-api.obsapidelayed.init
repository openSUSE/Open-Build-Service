#! /bin/sh
# Copyright (c) 2009 SUSE Linux AG, Nuernberg, Germany.
# All rights reserved.
#
# Author: Adrian Schroeter
# Please send feedback to http://www.suse.de/feedback/
#
# /etc/init.d/obsapidelayed
#   and its symbolic link
# /(usr/)sbin/rcobsapidelayed
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
### BEGIN INIT INFO
# Provides:          obsapidelayed
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      obsapisetup
# Should-Stop:       $none
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: OBS api delayed jobs
# Description:       Start the delayed job handler for OBS api
### END INIT INFO

#. /etc/rc.status

DELAYED_BIN=/srv/www/obs/api/script/delayed_job
. /lib/lsb/init-functions

# number of parallel jobs
NUM=3

# Reset status of this service
#rc_reset

case "$1" in
    start)
	echo "Starting OBS api delayed job handler "
        export RAILS_ENV="production"
        start-stop-daemon -u www-data -g www-data -x $DELAYED_BIN -S -b -- start -n $NUM
        : # startproc does not find the renamed processes...
	;;
    stop)
	echo "Stoping OBS api delayed job handler "
        export RAILS_ENV="production"
        start-stop-daemon -u www-data -g www-data -x $DELAYED_BIN --stop -- stop

	;;
    try-restart|condrestart)
	if test "$1" = "condrestart"; then
		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
	fi
	$0 status
	if test $? = 0; then
		$0 restart
	fi
	;;
    restart)
	$0 stop
	$0 start

	;;
    force-reload)
	echo "Reload service OBS api delayed jobs "
	$0 try-restart
	;;
    reload)
	## Not supported
	;;
    status)
	echo "Checking for service delayed OBS api jobs "
	status_of_proc "$obsdir/delayed_job.0" "OBS Api jobs" && exit 0 || exit $?
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;
esac
