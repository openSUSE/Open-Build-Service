version: 2.0

images:
  - &common_frontend_config
    user: frontend
    environment:
      NOKOGIRI_USE_SYSTEM_LIBRARIES: 1

  - &mariadb
    image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/containers/openbuildservice/mariadb:latest
    command: |
      /bin/bash -c 'echo -e "[mysqld]\ndatadir = /dev/shm" > /etc/my.cnf.d/obs.cnf && cp -a /var/lib/mysql/* /dev/shm && /usr/lib/mysql/mysql-systemd-helper start'
    name: db

  - &backend
    image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/containers/openbuildservice/backend:latest

  - &frontend_backend
    image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/containers/openbuildservice/frontend-backend:latest
    <<: *common_frontend_config
    environment:
      EAGER_LOAD: 1

  - &frontend_base
    image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/containers/openbuildservice/frontend-base:latest
    <<: *common_frontend_config

aliases:
  - &install_dependencies
    name: install dependencies
    command: |
      cd ./src/api && bundle install --jobs=4 --retry=3

  - &wait_for_database
    name: Wait for DB
    command: mysqladmin ping -h db

  - &init_git_submodule
    name: Init submodule
    command: git submodule update --init --recursive --remote

  - &create_test_db
    name: Create database
    command: cd src/api; bundle exec rake db:create db:setup RAILS_ENV=test

  - &bootstrap_old_test_suite
    name: Setup application
    command: cd src/api; bundle exec rake dev:bootstrap[old_test_suite] RAILS_ENV=test

  # keep the prefix for the following aligned
  - &save_repo_cache_key
    key: v3-repo-{{ .Branch }}-{{ .Revision }}

  - &initial_repo_restore
    restore_cache:
      keys:
        - v3-repo-{{ .Branch }}-{{ .Revision }}
        - v3-repo-{{ .Branch }}
        - v3-repo

  - &restore_repo
    restore_cache:
      keys:
        - v3-repo-{{ .Branch }}-{{ .Revision }}

  - &store_rspec_artefacts
    store_artifacts:
      path: ./src/api/log
      destination: rspec
    store_artifacts:
      path: ./src/api/tmp/capybara
      destination: capybara

  - &store_minitest_artefacts
    store_artifacts:
      path: ./src/api/log/
      destination: minitest

jobs:
  checkout_code:
    docker:
      - <<: *frontend_base
    steps:
      - *initial_repo_restore
      - checkout
      - run: *install_dependencies
      - restore_cache:
          key: v4-lint
      - run:
          name: Install jshint
          command: sudo npm install -g jshint
      - run:
          name: Run linters
          command: cd src/api; bundle exec rake dev:lint RAILS_ENV=test
      - save_cache:
          key: v4-lint-{{ epoch }}
          paths:
            - src/api/tmp/rubocop_cache_root_dir
            - src/api/tmp/rubocop_cache_rails_dir
      - run: rm -rf src/api/tmp/rubocop*
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:prepare assets:precompile RAILS_ENV=test
      - save_cache:
          <<: *save_repo_cache_key
          paths:
            - .

  rspec:
    docker:
      - <<: *frontend_base
      - <<: *mariadb
    steps:
      - *restore_repo
      - run: *install_dependencies
      - run: *wait_for_database
      - run: *create_test_db
      - run: mkdir /home/frontend/rspec
      - run:
          name: Run rspec
          command: cd src/api; bundle exec rspec --format progress --format RspecJunitFormatter -o /home/frontend/rspec/rspec.xml --exclude-pattern spec/bootstrap/**/*_spec.rb
      - <<: *store_rspec_artefacts
      - store_test_results:
          path: /home/frontend/rspec

  rspec-bootstrap:
    docker:
      - <<: *frontend_base
      - <<: *mariadb
    steps:
      - *restore_repo
      - run: *install_dependencies
      - run: *wait_for_database
      - run: *create_test_db
      - run:
          name: Run rspec with bootstrap enabled
          environment:
            BOOTSTRAP: 1
          command: cd src/api; bundle exec rspec --format progress --pattern spec/features/**/*_spec.rb --pattern spec/bootstrap/**/*_spec.rb
      - <<: *store_rspec_artefacts

  minitest:
    docker:
      - <<: *frontend_backend
      - <<: *mariadb
    steps:
      - *restore_repo
      - run: *install_dependencies
      - run: *init_git_submodule
      - run: *wait_for_database
      - run:
          name: Check DB Structure
          command: |
            cd src/api;
            bundle exec rake dev:lint:db RAILS_ENV=test
      - run: *bootstrap_old_test_suite
      - run: mkdir /home/frontend/minitest
      - run:
          name: Run minitest
          environment:
            DO_COVERAGE: 1
            TESTOPTS: "--ci-dir=/home/frontend/minitest"
          command: cd src/api; bundle exec rake test:api
      - store_test_results:
          path: /home/frontend/minitest
      - <<: *store_minitest_artefacts

  spider:
    docker:
      - <<: *frontend_backend
      - <<: *mariadb
    steps:
      - *restore_repo
      - run: *install_dependencies
      - run: *init_git_submodule
      - run: *wait_for_database
      - run: *bootstrap_old_test_suite
      - run:
          name: Run spider
          command: cd src/api; bundle exec rake test:spider
      - <<: *store_minitest_artefacts

  backend_test:
    docker:
      - <<: *backend
    working_directory: /home/frontend/project
    steps:
      - *restore_repo
      - run: *init_git_submodule
      - run:
          name: backend
          command: make -C src/backend test

workflows:
  version: 2
  test_all:
    jobs:
      - checkout_code
      - backend_test:
          requires:
            - checkout_code
      - rspec-bootstrap:
          requires:
            - checkout_code
      - rspec:
          requires:
            - checkout_code
      - minitest:
          requires:
            - checkout_code
      - spider:
          requires:
            - checkout_code
