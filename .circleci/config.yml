aliases:
  - &cc_test_reporter_id
    CC_TEST_REPORTER_ID: b7a6ce504d06a446d7f677160fb92e7b40a1c6538cd888435404a6ae92c5140a
  - &minitest
    docker:
      - image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/images/openbuildservice/frontend-backend:latest
        environment:
          NOKOGIRI_USE_SYSTEM_LIBRARIES: 1
          EAGER_LOAD: 1
          <<: *cc_test_reporter_id
        user: frontend
      - image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/images/openbuildservice/mariadb:latest
        command: |
          /bin/bash -c 'echo -e "[mysqld]\ndatadir = /dev/shm" > /etc/my.cnf.d/obs.cnf && cp -a /var/lib/mysql/* /dev/shm && /usr/lib/mysql/mysql-systemd-helper start'
        name: db
  - &frontend_base
    docker:
      - image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/images/openbuildservice/frontend-base:latest
        environment:
          NOKOGIRI_USE_SYSTEM_LIBRARIES: 1
          <<: *cc_test_reporter_id
        user: frontend
      - image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/images/openbuildservice/mariadb:latest
        command: |
          /bin/bash -c 'echo -e "[mysqld]\ndatadir = /dev/shm" > /etc/my.cnf.d/obs.cnf && cp -a /var/lib/mysql/* /dev/shm && /usr/lib/mysql/mysql-systemd-helper start'
        name: db
  - &restore_bundle_cache
    keys:
    - v3-dependencies-{{ checksum "./src/api/Gemfile.lock" }}
    # fallback to using the latest cache if no exact match is found
    - v3-dependencies-
  - &save_bundle_cache
    paths:
      - /usr/lib64/ruby/gems/2.5.0/gems/
    key: v2-dependencies-{{ checksum "./src/api/Gemfile.lock" }}
  - &install_dependencies
    name: install dependencies
    command: |
      cd ./src/api && bundle install --jobs=4 --retry=3
  - &wait_for_database
    name: Wait for DB
    command: mysqladmin ping -h db
  - &init_git_submodule
    name: Init submodule
    command: git submodule update --init --recursive --remote

version: 2
jobs:
  lint:
    <<: *frontend_base
    steps:
      - checkout
      - restore_cache: *restore_bundle_cache
      - run: *install_dependencies
      - save_cache: *save_bundle_cache
      - run: *wait_for_database
      - run:
          name: Install jshint
          command: sudo npm install -g jshint
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:prepare RAILS_ENV=test
      - run:
          name: Run linters
          command: cd src/api; bundle exec rake dev:lint RAILS_ENV=test
  rspec:
    <<: *frontend_base
    steps:
      - checkout
      - restore_cache: *restore_bundle_cache
      - run: *install_dependencies
      - save_cache: *save_bundle_cache
      - run: *wait_for_database
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:bootstrap RAILS_ENV=test
      - run: mkdir /home/frontend/rspec
      - run:
          name: Run rspec
          command: cd src/api; bundle exec rspec --format progress --format RspecJunitFormatter -o /home/frontend/rspec/rspec.xml --exclude-pattern spec/bootstrap/**/*_spec.rb
      - store_artifacts:
          path: ./src/api/log
          destination: rspec
      - store_artifacts:
          path: ./src/api/tmp/capybara
          destination: capybara
      - store_test_results:
          path: /home/frontend/rspec
  rspec-bootstrap:
    <<: *frontend_base
    steps:
      - checkout
      - restore_cache: *restore_bundle_cache
      - run: *install_dependencies
      - save_cache: *save_bundle_cache
      - run: *wait_for_database
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:bootstrap RAILS_ENV=test
      - run:
          name: Run rspec with bootstrap enabled
          environment:
            BOOTSTRAP: 1
          command: cd src/api; bundle exec rspec --format progress --pattern spec/features/**/*_spec.rb --pattern spec/bootstrap/**/*_spec.rb
      - store_artifacts:
          path: ./src/api/log
          destination: rspec
      - store_artifacts:
          path: ./src/api/tmp/capybara
          destination: capybara
  minitest:
    <<: *minitest
    steps:
      - checkout
      - run: *init_git_submodule
      - restore_cache: *restore_bundle_cache
      - run: *install_dependencies
      - save_cache: *save_bundle_cache
      - run: *wait_for_database
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:bootstrap[old_test_suite] RAILS_ENV=test
      - run: mkdir /home/frontend/minitest
      - run:
          name: Run minitest
          environment:
            DO_COVERAGE: 1
            TESTOPTS: "--ci-dir=/home/frontend/minitest"
          command: cd src/api; bundle exec rake test:api
      - store_test_results:
          path: /home/frontend/minitest
      - store_artifacts:
          path: ./src/api/log/
          destination: minitest
  spider:
    <<: *minitest
    steps:
      - checkout
      - run: *init_git_submodule
      - restore_cache: *restore_bundle_cache
      - run: *install_dependencies
      - save_cache: *save_bundle_cache
      - run: *wait_for_database
      - run:
          name: Setup application
          command: cd src/api; bundle exec rake dev:bootstrap[old_test_suite] RAILS_ENV=test
      - run:
          name: Run spider
          command: cd src/api; bundle exec rake test:spider
      - store_artifacts:
          path: ./src/api/log/
          destination: minitest
  backend_test:
    docker:
      - image: registry.opensuse.org/obs/server/unstable/container/sle12/sp3/images/openbuildservice/backend:latest
    steps:
      - checkout
      - run: *init_git_submodule
      - run:
          name: backend
          command: make -C src/backend test

workflows:
  version: 2
  test_all:
    jobs:
      - lint
      - rspec:
          requires:
            - lint
      - rspec-bootstrap:
          requires:
            - lint
      - minitest:
          requires:
            - lint
      - spider:
          requires:
            - lint
      - backend_test:
          requires:
            - lint
