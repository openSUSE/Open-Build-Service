openapi: 3.0.0

servers:
  - url: '/'

tags:
  - name: Announcements
  - name: Attribute Namespaces
  - name: Attributes
  - name: Build
  - name: Configuration
  - name: Distributions
  - name: General Information
  - name: Groups
  - name: Issue Trackers
  - name: Notifications
  - name: Person
  - name: Published Binaries
  - name: Requests
  - name: Search
    description: |
      All endpoints besides the owner search listed in the search group use Xpath expressions. The `match` query parameter is used
      to pass the Xpath predicate. The individual endpoints refer to different objects like Packages, Projects, Issues and more...
      Please refer to the documentation of the individual search endpoints to know which attributes can be accessed through the predicate,
      and which extra query parameters are supported or might be required in order to run the search.


      These functions can be used with the predicates: `boolean`, `contains`, `not`, `starts_with`, `ends_with`.

      _Example_:

      For a list of all projects where the name starts with "OBS:".

      `/search/project?match=starts_with(@name,'OBS:')`


      More than one predicate can be combined with the following operators: `eq`, `and`, `or`, `neq`, `gt`, `lt`, `gteq`, `lteq`.

      _Example_:

      To receive details about the package "obs-server" that is part of the project "OBS:Server:Unstable".

      `/search/package?match=@name='obs-server'+and+@project='OBS:Server:Unstable'`

  - name: Sources
  - name: Sources - Projects
  - name: Sources - Packages
  - name: Trigger
  - name: Workers


info:
  description: |
    The _Open Build Service API_ is an XML API.

    To authenticate, use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) by passing the _Authorization_ header in the form of `Authorization: Basic <credentials>`.

    There is no API versioning, since there is no need for it right now.

    Only rudimentary rate limiting is implemented, so please be gentle when using the API concurrently, especially with potentially expensive operations.
    In case of abuse, we will limit/remove your access.

    For command-line users, we recommend using [osc](https://github.com/openSUSE/osc) with its _api_ command to interact with the API.
    It's as simple as this example: `osc api /about` (_about_ is one of the endpoints documented below)
  version: '2.10.50'
  title: Open Build Service API
  contact:
    url: 'https://openbuildservice.org/'
    name: Open Build Service
  license:
    url: 'https://github.com/openSUSE/open-build-service/blob/master/COPYING'
    name: GNU General Public License v2.0

paths:
  /about:
    $ref: 'paths/about.yaml'

  /announcements:
    $ref: 'paths/announcements.yaml'
  /announcements/{announcement_id}:
    $ref: 'paths/announcements_announcement_id.yaml'

  /architectures:
    $ref: 'paths/architectures.yaml'
  /architectures/{architecture_name}:
    $ref: 'paths/architectures_architecture_name.yaml'

  /attribute:
    $ref: 'paths/attribute.yaml'
  /attribute/{namespace}:
    $ref: 'paths/attribute_namespace.yaml'
  /attribute/{namespace}/_meta:
    $ref: 'paths/attribute_namespace_meta.yaml'

  /attribute/{namespace}/{attribute_name}:
    $ref: 'paths/attribute_namespace_attribute_name.yaml'
  /attribute/{namespace}/{attribute_name}/_meta:
    $ref: 'paths/attribute_namespace_attribute_name_meta.yaml'

  /build:
    $ref: 'paths/build.yaml'
  /build/{project_name}:
    $ref: 'paths/build_project_name.yaml'
  /build/{project_name}/_result:
    $ref: 'paths/build_project_name_result.yaml'
  /build/{project_name}/{repository_name}:
    $ref: 'paths/build_project_name_repository_name.yaml'
  /build/{project_name}/{repository_name}/_buildconfig:
    $ref: 'paths/build_project_name_repository_name_buildconfig.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/_builddepinfo:
    $ref: 'paths/build_project_name_repository_name_architecture_name_builddepinfo.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/_repository:
    $ref: 'paths/build_project_name_repository_name_architecture_name_repository.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_log:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_log.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_buildinfo:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_buildinfo.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_status:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_status.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_history:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_history.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_reason:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_reason.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/_jobstatus:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_jobstatus.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/{file_name}:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_file_name.yaml'
  /build/{project_name}/{repository_name}/{architecture_name}/{package_name}/{file_name}?view=fileinfo:
    $ref: 'paths/build_project_name_repository_name_architecture_name_package_name_file_name_view_fileinfo.yaml'

  /configuration:
    $ref: 'paths/configuration.yaml'

  /distributions:
    $ref: 'paths/distributions.yaml'
  /distributions/include_remotes:
    $ref: 'paths/distributions_include_remotes.yaml'
  /distributions/{distribution_id}:
    $ref: 'paths/distributions_distribution_id.yaml'
  /distributions/bulk_replace:
    $ref: 'paths/distributions_bulk_replace.yaml'

  /group:
    $ref: 'paths/group.yaml'
  /group/{group_title}:
    $ref: 'paths/group_group_title.yaml'

  /issue_trackers:
    $ref: 'paths/issue_trackers.yaml'
  /issue_trackers/{issue_tracker_name}:
    $ref: 'paths/issue_trackers_issue_tracker_name.yaml'
  /issue_trackers/{issue_tracker_name}/issues/{issue_name}:
    $ref: 'paths/issue_trackers_issue_tracker_name_issues_issue_name.yaml'

  /my/notifications:
    $ref: 'paths/my_notifications.yaml'
  /my/notifications/{id}:
    $ref: 'paths/my_notifications_id.yaml'

  /person:
    $ref: 'paths/person.yaml'
  /person/register:
    $ref: 'paths/person_register.yaml'
  /person/{login}:
    $ref: 'paths/person_login.yaml'
  /person/{login}/group:
    $ref: 'paths/person_login_group.yaml'
  /person/{login}/token:
    $ref: 'paths/person_login_token.yaml'
  /person/{login}/token/{id}:
    $ref: 'paths/person_login_token_id.yaml'
  /person/{login}/watchlist:
    $ref: 'paths/watchlist.yaml'

  /published:
    $ref: 'paths/published.yaml'
  /published/{project_name}:
    $ref: 'paths/published_project_name.yaml'
  /published/{project_name}/{repository_name}:
    $ref: 'paths/published_project_name_repository_name.yaml'
  /published/{project_name}/{repository_name}?view=status:
    $ref: 'paths/published_project_name_repository_name_view_status.yaml'
  /published/{project_name}/{repository_name}/{architecture_name}:
    $ref: 'paths/published_project_name_repository_name_architecture_name.yaml'
  /published/{project_name}/{repository_name}/{architecture_name}/{binary_filename}:
    $ref: 'paths/published_project_name_repository_name_architecture_name_binary_filename.yaml'
  /published/{project_name}/{repository_name}/{architecture_name}/{binary_filename}?view=ymp:
    $ref: 'paths/published_project_name_repository_name_architecture_name_binary_filename_view_ymp.yaml'

  /request:
    $ref: 'paths/request.yaml'
  /request?view=collection:
    $ref: 'paths/request_view_collection.yaml'
  /request/{id}:
    $ref: 'paths/request_id.yaml'
  /request/{id}?cmd=diff:
    $ref: 'paths/request_id_cmd_diff.yaml'

  /search:
    $ref: 'paths/search.yaml'
  /search/channel:
    $ref: 'paths/search_channel.yaml'
  /search/channel/binary:
    $ref: 'paths/search_channel_binary.yaml'
  /search/channel/binary/id:
    $ref: 'paths/search_channel_binary_id.yaml'
  /search/issue:
    $ref: 'paths/search_issue.yaml'
  /search/missing_owner:
    $ref: 'paths/search_missing_owner.yaml'
  /search/owner:
    $ref: 'paths/search_owner.yaml'
  /search/package:
    $ref: 'paths/search_package.yaml'
  /search/package/id:
    $ref: 'paths/search_package_id.yaml'
  /search/package_id:
    $ref: 'paths/search_package__id.yaml'
  /search/person:
    $ref: 'paths/search_person.yaml'
  /search/project:
    $ref: 'paths/search_project.yaml'
  /search/project/id:
    $ref: 'paths/search_project_id.yaml'
  /search/project_id:
    $ref: 'paths/search_project__id.yaml'
  /search/published/binary/id:
    $ref: 'paths/search_published_binary_id.yaml'
  /search/published/pattern/id:
    $ref: 'paths/search_published_pattern_id.yaml'
  /search/published/repoinfo/id:
    $ref: 'paths/search_published_repoinfo_id.yaml'
  /search/released/binary:
    $ref: 'paths/search_released_binary.yaml'
  /search/released/binary/id:
    $ref: 'paths/search_released_binary_id.yaml'
  /search/repository/id:
    $ref: 'paths/search_repository_id.yaml'
  /search/request:
    $ref: 'paths/search_request.yaml'
  /search/request/id:
    $ref: 'paths/search_request_id.yaml'

  /service:
    $ref: 'paths/service.yaml'

  # Sources

  /source?cmd=branch:
    $ref: 'paths/source_branch.yaml'
  /source?cmd=createmaintenanceincident:
    $ref: 'paths/source_createmaintenanceincident.yaml'
  /source?cmd=orderkiwirepos:
    $ref: 'paths/source_orderkiwirepos.yaml'

  # Sources - Projects
  /source:
    $ref: 'paths/source.yaml'
  /source/{project_name}?cmd=addchannels:
    $ref: 'paths/source_project_name_cmd_addchannels.yaml'
  /source/{project_name}?cmd=copy:
    $ref: 'paths/source_project_name_cmd_copy.yaml'
  /source/{project_name}?cmd=createkey:
    $ref: 'paths/source_project_name_cmd_createkey.yaml'
  /source/{project_name}?cmd=createmaintenanceincident:
    $ref: 'paths/source_project_name_cmd_createmaintenanceincident.yaml'
  /source/{project_name}?cmd=createpatchinfo:
    $ref: 'paths/source_project_name_cmd_createpatchinfo.yaml'
  /source/{project_name}?cmd=extendkey:
    $ref: 'paths/source_project_name_cmd_extendkey.yaml'
  /source/{project_name}?cmd=freezelink:
    $ref: 'paths/source_project_name_cmd_freezelink.yaml'
  /source/{project_name}?cmd=lock:
    $ref: 'paths/source_project_name_cmd_lock.yaml'
  /source/{project_name}?cmd=modifychannels:
    $ref: 'paths/source_project_name_cmd_modifychannels.yaml'
  /source/{project_name}?cmd=move:
    $ref: 'paths/source_project_name_cmd_move.yaml'
  /source/{project_name}?cmd=release:
    $ref: 'paths/source_project_name_cmd_release.yaml'
  /source/{project_name}?cmd=remove_flag:
    $ref: 'paths/source_project_name_cmd_remove_flag.yaml'
  /source/{project_name}?cmd=set_flag:
    $ref: 'paths/source_project_name_cmd_set_flag.yaml'
  /source/{project_name}?cmd=showlinked:
    $ref: 'paths/source_project_name_cmd_showlinked.yaml'
  /source/{project_name}?cmd=undelete:
    $ref: 'paths/source_project_name_cmd_undelete.yaml'
  /source/{project_name}?cmd=unlock:
    $ref: 'paths/source_project_name_cmd_unlock.yaml'

  # Sources - Packages

  /source/{project_name}/{package_name}?cmd=diff:
    $ref: 'paths/source_project_name_package_name_cmd_diff.yaml'
  /source/{project_name}/{package_name}?cmd=showlinked:
    $ref: 'paths/source_project_name_package_name_cmd_showlinked.yaml'

  /trigger/{operation}:
    $ref: 'paths/trigger_operation.yaml'

  /worker/status:
    $ref: 'paths/worker_status.yaml'
  /worker/{architecture_name}:{worker_id}:
    $ref: 'paths/worker_architecture_name_worker_id.yaml'
  /worker?cmd=checkconstraints:
    $ref: 'paths/worker_cmd_checkconstraints.yaml'

components:
  securitySchemes:
    basic_authentication:
      type: http
      scheme: basic
    GitLab_key_authentication:
      type: apiKey
      in: header
      name: X-GitLab-Token

externalDocs:
  url: 'https://openbuildservice.org/help/'
  description: Open Build Service - Documentation
