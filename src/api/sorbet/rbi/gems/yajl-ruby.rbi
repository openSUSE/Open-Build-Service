# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/yajl-ruby/all/yajl-ruby.rbi
#
# yajl-ruby-1.4.1
class Yajl::Parser
  def <<(arg0); end
  def initialize(*arg0); end
  def on_parse_complete=(arg0); end
  def parse(*arg0); end
  def parse_chunk(arg0); end
  def self.new(*arg0); end
  def self.parse(str_or_io, options = nil, read_bufsize = nil, &block); end
end
class Yajl::Projector
  def initialize(stream, read_bufsize = nil); end
  def project(arg0); end
end
class Yajl::Encoder
  def encode(*arg0); end
  def initialize(*arg0); end
  def on_progress=(arg0); end
  def self.enable_json_gem_compatability; end
  def self.encode(obj, *args, &block); end
  def self.new(*arg0); end
end
module Yajl
  def self.dump(obj, *args, &block); end
  def self.load(str_or_io, options = nil, read_bufsize = nil, &block); end
end
module JSON
  def self.default_options; end
end
class Hash
  def to_json(options = nil); end
end
class Array
  def to_json(options = nil); end
end
class Integer < Numeric
  def to_json(options = nil); end
end
class Float < Numeric
  def to_json(options = nil); end
end
class String
  def to_json(options = nil); end
end
class TrueClass
  def to_json(options = nil); end
end
class FalseClass
  def to_json(options = nil); end
end
class NilClass
  def to_json(options = nil); end
end
module Kernel
end
