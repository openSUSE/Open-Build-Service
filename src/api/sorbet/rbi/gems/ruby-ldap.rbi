# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ruby-ldap/all/ruby-ldap.rbi
#
# ruby-ldap-0.9.20
module LDAP
  def dn2ufn(arg0); end
  def entry2hash(arg0); end
  def err2string(arg0); end
  def explode_dn(arg0, arg1); end
  def explode_rdn(arg0, arg1); end
  def hash2mods(arg0, arg1); end
  def mod(*arg0); end
  def self.dn2ufn(arg0); end
  def self.entry2hash(arg0); end
  def self.err2string(arg0); end
  def self.explode_dn(arg0, arg1); end
  def self.explode_rdn(arg0, arg1); end
  def self.hash2mods(arg0, arg1); end
  def self.mod(*arg0); end
end
class LDAP::Conn < Data
  def add(arg0, arg1); end
  def add_ext(arg0, arg1, arg2, arg3); end
  def bind(*arg0); end
  def bound?; end
  def compare(arg0, arg1, arg2); end
  def compare_ext(arg0, arg1, arg2, arg3, arg4); end
  def controls; end
  def delete(arg0); end
  def delete_ext(arg0, arg1, arg2); end
  def err2string(arg0); end
  def err; end
  def get_option(arg0); end
  def initialize(*arg0); end
  def modify(arg0, arg1); end
  def modify_ext(arg0, arg1, arg2, arg3); end
  def modrdn(arg0, arg1, arg2); end
  def perror(arg0); end
  def referrals; end
  def rename(arg0, arg1, arg2, arg3, arg4, arg5); end
  def result2error(arg0); end
  def sasl_bind(*arg0); end
  def sasl_quiet; end
  def sasl_quiet=(arg0); end
  def search(*arg0); end
  def search2(*arg0); end
  def search_ext(*arg0); end
  def search_ext2(*arg0); end
  def self.get_option(arg0); end
  def self.open(*arg0); end
  def self.open_uri(arg0); end
  def self.set_option(arg0, arg1); end
  def set_option(arg0, arg1); end
  def simple_bind(*arg0); end
  def start_tls(*arg0); end
  def unbind; end
end
class LDAP::SSLConn < LDAP::Conn
  def initialize(*arg0); end
  def self.open(*arg0); end
end
class LDAP::Entry
  def [](arg0); end
  def attrs; end
  def dn; end
  def get_attributes; end
  def get_dn; end
  def get_values(arg0); end
  def inspect; end
  def to_hash; end
  def vals(arg0); end
end
class LDAP::Mod
  def initialize(*arg0); end
  def inspect; end
  def mod_op; end
  def mod_type; end
  def mod_vals; end
end
class Struct::APIInfo < Struct
  def api_version; end
  def api_version=(_); end
  def extensions; end
  def extensions=(_); end
  def info_version; end
  def info_version=(_); end
  def protocol_version; end
  def protocol_version=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def vendor_name; end
  def vendor_name=(_); end
  def vendor_version; end
  def vendor_version=(_); end
end
class LDAP::Control
  def critical(*arg0); end
  def critical=(*arg0); end
  def critical?(*arg0); end
  def initialize(*arg0); end
  def initialize_copy(arg0); end
  def inspect; end
  def iscritical(*arg0); end
  def iscritical=(*arg0); end
  def oid(*arg0); end
  def oid=(*arg0); end
  def value(*arg0); end
  def value=(*arg0); end
end
