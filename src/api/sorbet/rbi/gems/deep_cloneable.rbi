# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/deep_cloneable/all/deep_cloneable.rbi
#
# deep_cloneable-2.4.0
class ActiveRecord::Base
  include ActiveRecord::Base::DeepCloneable
end
module ActiveRecord::Base::DeepCloneable
  def array_wrap(object); end
  def deep_clone(*args, &block); end
  def deep_cloneable_object_for(single_association, conditions); end
  def deep_cloneable_objects_for(many_association, conditions); end
  def dup_belongs_to_association(options, &block); end
  def dup_default_attribute_value_to(kopy, attribute, origin); end
  def dup_has_and_belongs_to_many_association(options, &block); end
  def dup_has_many_association(options, &block); end
  def dup_has_many_through_association(options, &block); end
  def dup_has_one_association(options, &block); end
  def dup_has_one_through_association(options, &block); end
  def evaluate_conditions(object, conditions); end
  def find_in_dictionary_or_dup(dictionary, dup_on_miss = nil); end
  def find_reverse_association(source_reflection, primary_key_name, macro, matcher = nil); end
  def normalized_includes_list(includes); end
  def process_joined_object_for_deep_clone(object, options, &block); end
end
class ActiveRecord::Base::DeepCloneable::AssociationNotFoundException < StandardError
end
