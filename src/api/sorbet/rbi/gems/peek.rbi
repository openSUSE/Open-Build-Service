# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/peek/all/peek.rbi
#
# peek-1.0.1
module Peek
  def self._request_id; end
  def self.adapter; end
  def self.adapter=(*adapter_options); end
  def self.clear; end
  def self.enabled?; end
  def self.env; end
  def self.into(klass, options = nil); end
  def self.railtie_helpers_paths; end
  def self.railtie_namespace; end
  def self.railtie_routes_url_helpers(include_path_helpers = nil); end
  def self.request_id; end
  def self.request_id=(id); end
  def self.reset; end
  def self.results; end
  def self.setup; end
  def self.table_name_prefix; end
  def self.use_relative_model_naming?; end
  def self.views; end
end
module Peek::Adapters
end
class Peek::Adapters::Base
  def get(request_id); end
  def initialize(options = nil); end
  def save; end
end
class Peek::Adapters::Memory < Peek::Adapters::Base
  def get(request_id); end
  def initialize(options = nil); end
  def requests; end
  def requests=(arg0); end
  def reset; end
  def save; end
end
module Peek::Views
end
class Peek::Views::View
  def after_request; end
  def before_request; end
  def context; end
  def context?; end
  def context_id; end
  def defer_key; end
  def dom_id; end
  def enabled?; end
  def initialize(options = nil); end
  def key; end
  def parse_options; end
  def partial_path; end
  def results; end
  def results?; end
  def setup_subscribers; end
  def subscribe(*args); end
end
module Peek::ControllerHelpers
  def peek_enabled?; end
  def set_peek_request_id; end
  extend ActiveSupport::Concern
end
class Peek::Railtie < Rails::Engine
end
class Peek::Adapters::Memcache < Peek::Adapters::Base
  def get(request_id); end
  def initialize(options = nil); end
  def save; end
end
