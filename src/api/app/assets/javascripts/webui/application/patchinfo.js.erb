function append_bug(issue) {
    if (issue.length > 0) {
        $("#issue_spinner").show();
        var issues = issue.replace(/ /g, '').split(',');
        jQuery.unique(issues);
        $.ajax({
            url: "new_tracker",
            type: "get",
            dataType: "json",
            data: {
                issues: issues,
                project: $("#project").val(),
                package: $("#package").val()
            },
            success: function (data) {
                if (data.error != "") {
                    alert(data.error);
                }

                data.issues.forEach(function(issueData) {
                    var tracker = issueData[0];
                    var id = issueData[1];
                    var url = issueData[2];
                    var sum = issueData[3];
                    var uniqueID = tracker + '_' + id;
                    if ($("div#issue_" + uniqueID).length > 0) {
                        return;
                    }
                    else {
                        $("#issuelist").append("<div id='issue_" + uniqueID + "'>" +
                            "<a id='remove_" + uniqueID + "' onclick='$(\"#issue_" + uniqueID + "\").remove(); return false;' href='#'> " +
                            "<img src='<%= asset_path('bug_delete.png') %>' title='Remove Bug' alt='Remove Bug'></a> " +
                            "<input type='hidden' name='issueid[]' id='issueid_" + uniqueID + "' value='" + id + "'/>" +
                            "<input type='hidden' name='issuetracker[]' id='issuetracker_" + uniqueID + "' value='" + tracker + "'/>" +
                            "<input type='hidden' name='issueurl[]' id='issueurl_" + uniqueID + "' value='" + url + "'/>" +
                            "<input type='hidden' name='issuesum[]' id='issuesum_" + uniqueID + "' value='" + sum + "'/>" +
                            "<a href=\"" + url + "\" target='_blank'>" + tracker + "#" + id + "</a>" + ":<br/>" +
                            "<div id='issue_desc_" + uniqueID + "' onclick='change_issue_desc(\"" + uniqueID + "\");'>" + sum + "</div>" +
                            "<div id='change_desc_" + uniqueID + "' style='display:none;'>" +
                            "<input id='desc_" + uniqueID + "' type='text' value='" + sum + "' size=" + sum.length +
                            " name='desc_" + uniqueID + "'/><a onclick='changeDesc(\"ok\", \"" + uniqueID + "\"); return false;' href='#'>" +
                            "<img title='Change description' src='<%=asset_path('ok.png')%>', alt='Ok'></a>" +
                            "<a onclick='changeDesc(\"cancel\", \"" + uniqueID + "\"); return false;' href='#'>" +
                            "<img title='Cancel changes' src='<%=asset_path('req-decline.png')%>', alt='Cancel'></a></div></div>");

                    }
                });
                $("#issue").val("");
                $("#issue_spinner").hide();
            }
        });
    }
    return false;
}

function update_patchinfo() {
    $("#update_spinner").show();
    $.ajax({
        url: "updatepatchinfo",
        type: "get",
        data: {
            project: $("input#project").val(),
            package: $("input#package").val()
        },
        complete: function () {
            $("#update_spinner").hide();
        }
    });
}

function change_issue_desc(issue) {
    var issuedesc = "#issue_desc_" + issue;
    var changedesc = "#change_desc_" + issue;
    $(issuedesc).hide();
    $("#remove_" + issue).hide();
    $(changedesc).show();
    $("#desc_" + issue).val($(issuedesc).text().trim());
}

function changeDesc(state, issue) {
    var issuedesc = "#issue_desc_" + issue;
    var changedesc = "#change_desc_" + issue;
    var desctext = $("#desc_" + issue).val();
    if (state == "ok") {
        $(issuedesc).text(desctext);
        $("#issuesum_" + issue).val(desctext);
    }
    $(issuedesc).show();
    $("#remove_" + issue).show();
    $(changedesc).hide();
}

function moveSelectedItems(source, destination) {
    var selected = $(source + ' option:selected').remove();
    var sorted = $.makeArray($(destination + ' option').add(selected)).sort(function (a, b) {
        return $(a).text() > $(b).text() ? 1 : -1;
    });
    $(destination).empty().append(sorted);
}

function stopRKey(evt) {
    var evt = (evt) ? evt : ((event) ? event : null);
    var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
    if ((evt.keyCode == 13) && (node.type == "text")) {
        return false;
    }
}

function toggle_blockreason(){
    if (!$("#block").is(":checked")) {
        $("#block_reason").prop('disabled', true);
    } else {
        $("#block_reason").prop('disabled', false);
    }
}

function patchinfoReady() {
    document.onkeypress = stopRKey;
    toggle_blockreason();
    $("form").submit(function () {
        $('#selected_binaries option').attr('selected', true);
        $('#available_binaries option').attr('selected', true);
    });

    $('#add').click(function () {
        $("#selected_binaries option[value='']").remove();
        moveSelectedItems('#available_binaries', '#selected_binaries');
    });
    $('#addAll').click(function () {
        $("#selected_binaries option[value='']").remove();
        $('#available_binaries option').attr('selected', 'true');
        moveSelectedItems('#available_binaries', '#selected_binaries');
    });
    $('#remove').click(function () {
        moveSelectedItems('#selected_binaries', '#available_binaries');
    });
    $('#removeAll').click(function () {
        $('#selected_binaries option').attr('selected', 'true');
        moveSelectedItems('#selected_binaries', '#available_binaries');
    });

    $("#summary").keypress(function (event) {
        if (event.keyCode == 13) {
            event.preventDefault();
        }
    });
    $('#block').change(function(){
        toggle_blockreason();
    });
}
