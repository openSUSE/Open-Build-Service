- if flipper_responsive?
  .bg-light.scrollable-tabs
    = tab_link('Overview', [project_show_path(project), keys_and_certificates_path(project)], false, 'scrollable-tab-link')
    - unless @spider_bot
      - if project.is_maintenance?
        = tab_link('Incidents', project_maintenance_incidents_path(project), false, 'scrollable-tab-link')
        = tab_link('Maintained Projects', project_maintained_projects_path(project), false, 'scrollable-tab-link')
      - unless project.defines_remote_instance? || project.is_maintenance?
        = tab_link('Repositories', repositories_path(project), false, 'scrollable-tab-link')
        = tab_link('Monitor', project_monitor_path(project), false, 'scrollable-tab-link')
      = tab_link('Requests', project_requests_path(project), false, 'scrollable-tab-link')
      - unless project.defines_remote_instance?
        = tab_link('Users', project_users_path(project), false, 'scrollable-tab-link')
      - unless project.defines_remote_instance? || project.is_maintenance?
        = tab_link('Subprojects', project_subprojects_path(project), false, 'scrollable-tab-link')
        = tab_link('Project Config', project_config_path(project), false, 'scrollable-tab-link')
      = tab_link('Attributes', [index_attribs_path(project)], controller_name == 'attribute', 'scrollable-tab-link')
      = tab_link('Meta', project_meta_path(project), false, 'scrollable-tab-link')
      - unless project.defines_remote_instance? || project.is_maintenance?
        = tab_link('Status', project_status_path(project), false, 'scrollable-tab-link')
      = tab_link('Pulse', project_pulse_path(project), false, 'scrollable-tab-link')
      - active = controller_path.starts_with?('webui/staging')
      - if project.staging_project?
        = tab_link('Staging', staging_workflow_path(project.staging_workflow.project), false, 'scrollable-tab-link')
      - elsif project.staging && project.staging.persisted?
        = tab_link('Staging', staging_workflow_path(project), active, 'scrollable-tab-link')
      - elsif policy(Staging::Workflow.new(project: project)).create?
        = tab_link('Staging', new_staging_workflow_path(project: project), active, 'scrollable-tab-link')
- else
  .bg-light
    %ul.nav.nav-tabs.pt-2.px-3.flex-nowrap.collapsible{ 'role': 'tablist' }
      %li.nav-item
        = tab_link('Overview', [project_show_path(project), keys_and_certificates_path(project)])
      - unless @spider_bot
        - if project.is_maintenance?
          %li.nav-item
            = tab_link('Incidents', project_maintenance_incidents_path(project))
          %li.nav-item
            = tab_link('Maintained Projects', project_maintained_projects_path(project))
        - unless project.defines_remote_instance? || project.is_maintenance?
          %li.nav-item
            = tab_link('Repositories', repositories_path(project))
          %li.nav-item
            = tab_link('Monitor', project_monitor_path(project))
        %li.nav-item
          = tab_link('Requests', project_requests_path(project))
        - unless project.defines_remote_instance?
          %li.nav-item
            = tab_link('Users', project_users_path(project))
        - unless project.defines_remote_instance? || project.is_maintenance?
          %li.nav-item
            = tab_link('Subprojects', project_subprojects_path(project))
          %li.nav-item
            = tab_link('Project Config', project_config_path(project))
        %li.nav-item
          = tab_link('Attributes', index_attribs_path(project))
        %li.nav-item
          = tab_link('Meta', project_meta_path(project))
        - unless project.defines_remote_instance? || project.is_maintenance?
          %li.nav-item
            = tab_link('Status', project_status_path(project))
        %li.nav-item
          = tab_link('Pulse', project_pulse_path(project))
        - active = controller_path.starts_with?('webui/staging')
        - if project.staging_project?
          %li.nav-item
            = tab_link('Staging', staging_workflow_path(project.staging_workflow.project))
        - elsif project.staging && project.staging.persisted?
          -# If Staging::Workflow.new(...) is executed below, project.staging will be a new object.
            It will be persisted if the project is really a staging workflow project.
          %li.nav-item
            = tab_link('Staging', staging_workflow_path(project), active)
        - elsif policy(Staging::Workflow.new(project: project)).create?
          %li.nav-item
            = tab_link('Staging', new_staging_workflow_path(project: project), active)
      %li.nav-item.dropdown
        %a.nav-link.dropdown-toggle{ href: '#', 'data-toggle': 'dropdown', 'role': 'button', 'aria-expanded': 'false', 'aria-haspopup': 'true' }
        .dropdown-menu.dropdown-menu-right
