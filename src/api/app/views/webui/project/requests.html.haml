- @pagetitle = "Requests for #{@project}"

= form_for(:request, url: project_requests_path(project: @project), method: :get, id: 'requests-filter-form') do |form|
  .row
    .col-md-4.col-lg-3.px-0.px-md-3.sticky-top.mb-3#requests-filter-desktop
      .card
        %strong.d-block.d-md-none.p-3{ data: { 'bs-toggle': 'collapse', 'bs-target': '#filters' },
                                    aria: { expanded: true, controls: 'filters' } }
          Filtered by: #{params[:status]&.humanize}
          %i.float-end.mt-1.fa.fa-chevron-down#requests-dropdown-trigger
        .collapse#filters
          = render partial: 'webui/request/requests_filter', locals: { selected_filter: @selected_filter, creators: @bs_requests_creators, clear_path: project_requests_path(project: @project)  }
    .col-md-8.col-lg-9.px-0.px-md-3.d-none#requests-list-loading
      = render partial: 'webui/shared/loading', locals: { text: 'Loading...', wrapper_css: ['loading'] }
    .col-md-8.col-lg-9.px-0.px-md-3#requests-list
      .card.sticky-top.mb-3#requests-filter-search-text
        .card-body.row
          .col
          .col-lg
            %input.ms-auto.form-control{ 'aria-label': 'Search', name: 'requests_search_text',
              placeholder: 'Search Requests', type: 'text', value: @selected_filter[:search_text] }
      .card
        .card-body.list-group.list-group-flush.p-3#requests
          .text-center.mb-3
            - if @bs_requests.blank?
              %p There are no requests available
            - else
              %span.ms-3= page_entries_info(@bs_requests, entry_name: 'request')
          = render partial: 'webui/request/request_item', collection: @bs_requests, as: :bs_request
          = paginate @bs_requests, views_prefix: 'webui'
  = form.submit(nil, class: 'd-none')

:javascript
  collectMultiSelects();

  function submitRequestFilters() {
    $('#requests-filter-form').submit();
  }

  let submitFiltersTimeout;

  $(document).on('change', '#filters input', function() {
    $('#requests-list').hide();
    $('#requests-list-loading').removeClass('d-none');
    clearTimeout(submitFiltersTimeout);
    submitFiltersTimeout = setTimeout(submitRequestFilters, 1500);
  });

  $(document).on("input", "#request-creator-search", function(event) {
    var searchInput = event.target;
    var filterValue = searchInput.value.toLowerCase();
    var dropdown = document.getElementById("request-creator-dropdown");
    var dropdownInputFields = dropdown.getElementsByTagName("input");

    for (i = 1; i < dropdownInputFields.length; i++) {
      dropdownInputValue = dropdownInputFields[i].value;

      if (dropdownInputValue.toLowerCase().indexOf(filterValue) > -1) {
        dropdownInputFields[i].closest(".dropdown-item-text").style.display = "";
      } else {
        dropdownInputFields[i].closest(".dropdown-item-text").style.display = "none";
      }
    }
  });
