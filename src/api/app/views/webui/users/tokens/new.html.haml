- @pagetitle = 'Create Token'
- type_options = Token::OPERATIONS.map { |a| "Token::#{a}".constantize.token_name }

.card
  .card-body
    %h3.mb-3= @pagetitle

    .row
      .col-12.col-md-10.col-lg-8
        = form_with(model: @token, method: :post, local: false) do |f|
          .form-row.d-none#created-token
            .col-12.col-md-10.col-lg-9
              %fieldset.form-group
                = f.label(:string_readonly, 'Your new OBS Personal Access Token Secret', class: 'col-form-label col-form-label-lg')
                .input-group
                  = render CopyToClipboardInputComponent.new(form_builder: f)
              %hr

          .form-row
            .col
              .form-group
                = f.label(:type, class: 'col-form-label col-form-label-lg mr-2')
                .w-100.d-sm-none
                = f.collection_radio_buttons(:type, type_options, :to_s, :to_s, class: 'custom-control-input', required: true) do |radio|
                  .custom-control.custom-radio.custom-control-inline
                    = radio.radio_button(class: 'custom-control-input')
                    = radio.label(class: 'custom-control-label')

          .form-row
            .col-sm
              .form-group.ui-front
                = f.label(:name, 'Name')
                = f.text_field(:name, class: 'form-control', placeholder: 'Eg: Rebuild vim package')
                .form-text.text-muted
                  Optional: provide a name to identify your token.

          .form-row#package-project-form
            .col-sm
              = render partial: 'webui/shared/autocomplete', locals: { html_id: 'project_name', label: 'Project name', required: false,
                                                                       data: { source: autocomplete_projects_path(local: true) } }
            .col-sm
              = render partial: 'webui/shared/autocomplete', locals: { html_id: 'package_name', label: 'Package name', required: false,
                                                                       data: { source: autocomplete_packages_path }, disabled: true }
            .col-12
              .form-group.form-text.text-muted
                Optional: provide project and package names, to limit the token to a specific package.

          .form-row
            .col-12.col-md-10.col-lg-9
              .form-group.d-none#fieldset-token-scm-token
                = f.label(:scm_token, 'SCM Token')
                %abbr.text-danger{ title: 'required' } *
                = f.password_field(:scm_token, size: 80, class: 'form-control', placeholder: 'Please enter your SCM token')

          .actions
            = link_to('Cancel', tokens_path, title: 'Cancel', class: 'btn btn-outline-secondary px-4 mr-3 mt-3 mt-sm-0')
            = f.submit('Create', class: 'btn btn-primary px-4 mt-3 mt-sm-0')

- content_for :ready_function do
  :plain
    // Default type value: 'runservice'
    $('#token_type_runservice').attr('checked', true);

    // Shows/Hide SCM Token input field
    $('input[type=radio]').on('change', function() {
      if (this.value == 'workflow') {
        $('#fieldset-token-scm-token').removeClass('d-none');
        $('#package-project-form').addClass('d-none');
        $('#token_scm_token').attr('required', true);
      }
      else if (!$('#fieldset-token-scm-token').attr('disabled')) {
        $('#fieldset-token-scm-token').addClass('d-none');
        $('#package-project-form').removeClass('d-none');
        $('#token_scm_token').attr('required', false);
      }
    });
