= render partial: 'webui/package/tabs'
= form_for(@patchinfo, url: update_patchinfo_path(project: @project, package: @package, auto_html5_validation: false), method: :put, html: { id: 'patchinfo' }) do |f|
  .section
    .grid_8.alpha
      .box.show_left.show_right
        .box{ style: "background-color:#DDDDDD; margin-top: 0" }
          %h2{ style: "display: inline" }
            Edit Patchinfo for #{@project}
        .box.show_left.show_right
          %p
            %strong
              = f.label(:packager, 'Packager:')
            %br/
            = f.text_field :packager, required: true
            :javascript
              $("#packager").autocomplete({source: '#{url_for controller: 'user', action: 'autocomplete'}', search: function(event, ui) {
                $(this).addClass('loading-spinner');
              },
              response: function(event, ui) {
                $(this).removeClass('loading-spinner');
              },minLength: 2});
          %p
            %strong
              = image_tag('info.png', title: 'Enter a short summary. Mainpackage: shortdescription of the mainfix', alt: 'Summaryinfo')
              = f.label(:summary, 'Summary:')
            = f.text_area :summary, size: '60x1', required: true, minlength: 10
          %p
            %strong
              = image_tag('info.png', title: 'Enter a full description what the update fixes', alt: 'Descriptioninfo')
              = f.label(:description, 'Description:')
            = f.text_area :description, size: '65x9', required: true, minlength: 50
          %p
            %strong
              = image_tag('info.png', title: 'Enter a version of this update', alt: 'Versioninfo')
              = f.label(:version, 'Version:')
            %br/
            = f.text_field :version
          %p
            %strong
              = image_tag('info.png', title: 'Enter a message', alt: 'Messageinfo')
              = f.label(:message, 'Message:')
            = f.text_area :message, size: '65x5'
          %p
            %strong
              = image_tag('info.png', title: 'Choose the category of your update', alt: 'Categoryinfo')
              = f.label(:category, 'Category:')
            = f.select :category, options_for_select(Patchinfo::CATEGORIES, @patchinfo.category)
          %p
            %strong
              = image_tag('info.png', title: 'Select the rating of this update', alt: 'Ratinginfo')
              = f.label(:rating, 'Rating:')
            = f.select :rating, options_for_select(Patchinfo::RATINGS, @patchinfo.rating)
        .box.show_left.show_right
          %p
            %strong
              = image_tag('info.png', title: 'List of issues what the update fixes', alt: 'Issueinfo')
              Issues:
          #issuelist
            - if @patchinfo.issues
              - @patchinfo.issues.reject { |issue| issue.blank? }.each do |issue|
                %div{ id: "issue_#{issue[0]}_#{issue[1]}" }
                  = link_to image_tag('bug_delete.png', alt: 'Remove Bug', title: 'Remove Bug'), '#', onclick: "$('#issue_#{issue[0]}_#{issue[1]}').remove(); return false;", style: 'clear:both;', id: "remove_#{issue[0]}_#{issue[1]}"
                  = f.hidden_field :issueid, value: "#{issue[1]}", id: "issueid_#{issue[0]}_#{issue[1]}", multiple: true
                  = f.hidden_field :issuetracker, value: "#{issue[0]}", id: "issuetracker_#{issue[0]}_#{issue[1]}", multiple: true
                  = f.hidden_field :issueurl, value: "#{issue[2]}", id: "issueurl_#{issue[0]}_#{issue[1]}", multiple: true
                  = f.hidden_field :issuesum, value: "#{issue[3]}", id: "issuesum_#{issue[0]}_#{issue[1]}", multiple: true
                  = link_to "#{issue[0].to_s}##{issue[1].to_s}", issue[2].to_s
                  \:Â 
                  %div{ id: "issue_desc_#{issue[0]}_#{issue[1]}", onclick: "change_issue_desc('#{issue[0]}_#{issue[1]}');" }
                    = issue[3].to_s
                  %div{ id: "change_desc_#{issue[0]}_#{issue[1]}", style: "display:none;" }
                    = text_field_tag 'desc_' + issue[0] + '_' + issue[1], issue[3].to_s, size: issue[3].to_s.length
                    = link_to image_tag('ok.png', alt: 'Ok', title: 'Change description'), '#', onclick: "changeDesc('ok', '#{issue[0]}_#{issue[1]}'); return false;"
                    = link_to image_tag('req-decline.png', alt: 'Cancel', title: 'Cancel changes'), '#', onclick: "changeDesc('cancel', '#{issue[0]}_#{issue[1]}'); return false;"
          .box.show_right.show_left{ style: "margin-top:5px;" }
            %p
              = f.label(:issue) do
                Add an additional bug (single or a comma-separated list e.g.: "boo#123456,
                bgo#654321,CVE-2012-1234)"
                %br/
                A list of all supported tracker you can find here:
                \#{link_to 'Tracker List', 'https://en.opensuse.org/openSUSE:Packaging_Patches_guidelines#Current_set_of_abbreviations'}
              %input#issue{ name: "issuelist", type: "text", value: "#{@issueid}" }
                = link_to image_tag('bug_add.png', alt: 'Add Bug', title: "Add additional issues e.g.: \"bnc#123456, bgo#654321\""), '#', data: { 'add-issue' => true, project: @project.name }
                = image_tag('ajax-loader.gif', id: 'issue_spinner', class: 'hidden')
          .box.show_left.show_right
            = link_to 'Update issues from sources', update_issues_patchinfo_path(project: @project, package: @package), { data: { confirm: 'Attention! All unsaved data will be lost! Continue?' }, method: :post }
        .box.show_left.show_right
          %p
            %strong
              = image_tag('info.png', title: 'Set the required flags for this update', alt: 'Flagsinfo')
              Required actions:
          %p
            = f.check_box :zypp_restart_needed
            = f.label(:zypp_restart_needed, 'Package-manager restart suggested')
          %p
            = f.check_box :relogin_needed
            = f.label(:relogin_needed, 'Relogin suggested')
          %p
            = f.check_box :reboot_needed
            = f.label(:reboot_needed, 'Reboot suggested')
        .box.show_left.show_right
          %p
            %strong
              = image_tag('info.png', title: 'Move specific binaries to the right select box by using the arrows', alt: 'Binaryinfo')
              Binaries:
          - if @binarylist.present? || @patchinfo.binaries.present?
            #avail-bin{ style: "float:left; width:44%; margin-left:5px;" }
              = select_tag 'available_binaries', options_for_select(@binarylist.to_a), multiple: true, size: 6, style: 'width:100%;'
            #bin-options{ style: "float:left; width:28px;" }
              %input#add{ style: "width:28px;", type: "button", value: ">" }/
              %br/
              %input#add-all{ style: "width:28px;", type: "button", value: ">>" }/
              %br/
              %input#remove-all{ style: "width:28px;", type: "button", value: "<<" }/
              %br/
              %input#remove{ style: "width:28px;", type: "button", value: "<" }/
              %br/
            #sele-bin{ style: "width:44%; float:left;" }
              = f.select :binaries, options_for_select(@patchinfo.binaries.to_a), { include_hidden: false }, { multiple: true, size: 6, style: 'width:100%;' }
            %br{ style: "clear:both;" }/
          - else
            %strong No binaries available!
        .box.ui-state-error.ui-widget-shadow.show_left.show_right{ style: "padding-bottom:5px;" }
          %p
            = f.label(:block) do
              %strong Block release?
            = f.check_box :block
          %p
            = f.label(:block_reason) do
              %strong Reason:
            = f.text_field :block_reason, style: 'width: 99%', disabled: true
        %div{ style: "margin-left:5px;" }
          = submit_tag 'Save'
        = f.hidden_field :name
- content_for :ready_function do
  patchinfoReady();
