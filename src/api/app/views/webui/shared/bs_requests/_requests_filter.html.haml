-# haml-lint:disable ViewLength
.accordion.accordion-flush
  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-direction' },
                                             aria: { expanded: 'true', controls: 'request-filter-direction' } }
      %b Direction
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-direction
      = render partial: 'webui/shared/check_box', locals: { label: 'Incoming',
                                                              key: 'direction[incoming]', name: 'direction', value: 'incoming',
                                                              checked: selected_filter[:direction] == 'incoming' }
      = render partial: 'webui/shared/check_box', locals: { label: 'Outgoing',
                                                              key: 'direction[outgoing]', name: 'direction', value: 'outgoing',
                                                              checked: selected_filter[:direction] == 'outgoing' }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-state' },
                                                       aria: { expanded: 'true', controls: 'request-filter-state' } }
      %b State
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-state
      - BsRequest::VALID_REQUEST_STATES.each do |state|
        = render partial: 'webui/shared/check_box', locals: { label: render(BsRequestStateBadgeComponent.new(state: state)),
                                                              key: "state[#{state}]", name: 'state[]',
                                                              value: state,
                                                              checked: selected_filter[:state]&.include?(state.to_s) }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-action' },
                                                       aria: { expanded: 'true', controls: 'request-filter-action' } }
      %b Action Type
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-action
      = render partial: 'webui/shared/check_box', locals: { label: 'Bugowner Change', key: 'action_type[set_bugowner]',
                                                            name: 'action_type[]', value: 'set_bugowner',
                                                            label_icon: action_type_icon('set_bugowner'),
                                                            checked: selected_filter[:action_type]&.include?('set_bugowner')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Change Devel Project', key: 'action_type[change_devel]',
                                                            name: 'action_type[]', value: 'change_devel',
                                                            label_icon: action_type_icon('change_devel'),
                                                            checked: selected_filter[:action_type]&.include?('change_devel')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Delete', key: 'action_type[delete]',
                                                            name: 'action_type[]', value: 'delete',
                                                            label_icon: action_type_icon('delete'),
                                                            checked: selected_filter[:action_type]&.include?('delete')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Maintenance Incident', key: 'action_type[maintenance_incident]',
                                                            name: 'action_type[]', value: 'maintenance_incident',
                                                            label_icon: action_type_icon('maintenance_incident'),
                                                            checked: selected_filter[:action_type]&.include?('maintenance_incident')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Maintenance Release', key: 'action_type[maintenance_release]',
                                                            name: 'action_type[]', value: 'maintenance_release',
                                                            label_icon: action_type_icon('maintenance_release'),
                                                            checked: selected_filter[:action_type]&.include?('maintenance_release')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Release', key: 'action_type[release]',
                                                            name: 'action_type[]', value: 'release',
                                                            label_icon: action_type_icon('release'),
                                                            checked: selected_filter[:action_type]&.include?('release')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Role Change', key: 'action_type[add_role]',
                                                            name: 'action_type[]', value: 'add_role',
                                                            label_icon: action_type_icon('add_role'),
                                                            checked: selected_filter[:action_type]&.include?('add_role')}

      = render partial: 'webui/shared/check_box', locals: { label: 'Submit', key: 'action_type[submit]',
                                                            name: 'action_type[]', value: 'submit',
                                                            label_icon: action_type_icon('submit'),
                                                            checked: selected_filter[:action_type]&.include?('submit')}

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-priority' },
                                                       aria: { expanded: 'true', controls: 'request-filter-priority' } }
      %b Priority
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-priority
      - BsRequest::VALID_REQUEST_PRIORITIES.each do |priority|
        = render partial: 'webui/shared/check_box', locals: { label: render(BsRequestPriorityBadgeComponent.new(priority: priority)),
                                                              key: "priority[#{priority}]", name: 'priority[]',
                                                              value: priority,
                                                              checked: selected_filter[:priority]&.include?(priority.to_s) }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-project-name' },
                                                       aria: { expanded: 'true', controls: 'request-filter-project-name' } }
      %b Project name
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-project-name
      #request-project-name-dropdown
        = render partial: 'webui/shared/autocomplete', locals: { html_id: 'project_names_search', label: 'Project names:',
                                                                 html_name: 'project_names[]', required: false, with_label: false,
                                                                 data: { source: autocomplete_projects_path } }
        .scroll-list-wrapper
          - selected_filter[:project_names].each do |project_name|
            .dropdown-item-text
              = render partial: 'webui/shared/check_box', locals: { label: project_name,
                                                                    key: "project_names[#{project_name}]", name: 'project_names[]',
                                                                    value: project_name,
                                                                    checked: selected_filter[:project_names]&.include?(project_name) }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-creator' },
                                                       aria: { expanded: 'true', controls: 'request-filter-creator' } }
      %b Creator
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-creator
      #request-creator-dropdown
        = render partial: 'webui/shared/autocomplete', locals: { html_id: 'creators_search', label: 'Creators:',
                                                                 html_name: 'creators[]', required: false, with_label: false,
                                                                 data: { source: autocomplete_users_path } }
        .scroll-list-wrapper
          - if selected_filter[:creators].include?(User.session.login)
            .dropdown-item-text
              = render partial: 'webui/shared/check_box', locals: { label: "#{User.session.login} (me)",
                                                                    key: "creators[#{User.session.login}]", name: 'creators[]',
                                                                    value: User.session.login,
                                                                    checked: selected_filter[:creators]&.include?(User.session.login) }
          - selected_filter[:creators].each do |creator|
            - next if creator == User.session.login
            .dropdown-item-text
              = render partial: 'webui/shared/check_box', locals: { label: creator,
                                                                    key: "creators[#{creator}]", name: 'creators[]',
                                                                    value: creator,
                                                                    checked: selected_filter[:creators]&.include?(creator) }

  .mt-2.mb-2.accordion-item.border-0
    %h6.px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-reviewer' },
                                                       aria: { expanded: 'true', controls: 'request-filter-reviewer' } }
      %b Reviewer
      .px-1 (Users and Groups)
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-reviewer
      #request-reviewer-dropdown
        = render partial: 'webui/shared/autocomplete', locals: { html_id: 'reviewer_search', label: 'Reviewers:',
                                                                 html_name: 'reviewers[]', required: false, with_label: false,
                                                                 data: { source: autocomplete_reviewers_path } }

        .scroll-list-wrapper
          - if selected_filter[:reviewers].include?(User.session.login)
            .dropdown-item-text
              = render partial: 'webui/shared/check_box', locals: { label: "#{User.session.login} (me)",
                                                                    key: "reviewers[#{User.session.login}]", name: 'reviewers[]',
                                                                    value: User.session.login,
                                                                    checked: selected_filter[:reviewers]&.include?(User.session.login) }
          - selected_filter[:reviewers].each do |reviewer|
            - next if reviewer == User.session.login
            .dropdown-item-text
              = render partial: 'webui/shared/check_box', locals: { label: reviewer,
                                                                    key: "reviewers[#{reviewer}]", name: 'reviewers[]',
                                                                    value: reviewer,
                                                                    checked: selected_filter[:reviewers]&.include?(reviewer) }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-stag-proj' },
                                                       aria: { expanded: 'true', controls: 'request-filter-stag-proj' } }
      %b Staging  Project
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-stag-proj
      .mb-3.ui-front
        %input.form-control#stag-proj-search{ placeholder: 'Filter staging project', type: 'search' }
      .scroll-list-wrapper
        - Project.where.not(staging_workflow_id: nil).each do |sp|
          .dropdown-item-text.request-filter-stag-proj-item
            - checked = selected_filter[:staging_project]&.include?(sp.name) || defined?(project) && project == sp
            = render partial: 'webui/shared/check_box', locals: { label: sp.name,
                                                                  key: "staging_project[#{sp.id}]", name: 'staging_project[]',
                                                                  value: sp.name,
                                                                  checked: checked }

  .mt-2.mb-2.accordion-item.border-0
    .px-3.py-2.accordion-button.no-style{ data: { 'bs-toggle': 'collapse', 'bs-target': '#request-filter-created-at' },
                                                       aria: { expanded: 'true', controls: 'request-filter-created-at' } }
      %b Created datetime
      .selected-content.small.ms-1
    .px-4.pb-2.accordion-collapse.collapse.show#request-filter-created-at
      = render partial: 'webui/shared/input', locals: { label: 'From', filter_item: 'created_at_from', type: 'datetime-local',
                                                        selected_input_value: selected_filter[:created_at_from] }
      = render partial: 'webui/shared/input', locals: { label: 'To', filter_item: 'created_at_to', type: 'datetime-local',
                                                        selected_input_value: selected_filter[:created_at_to] }

.text-center.mt-4.mb-4
  = link_to('Clear', url, class: 'btn btn-light border')

- content_for(:content_for_head, javascript_include_tag('webui/content-selector-filters'))

-# haml-lint:enable ViewLength
