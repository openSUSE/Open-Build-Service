-# FIXME: refactor this file
%ul.list-unstyled
  - if failures > 0
    = render partial: 'show_failures', locals: { failures: failures, package_name: package.name, project: project }

  - if devel_package
    = render partial: 'show_devel_package', locals: { devel_package: devel_package }

  - if package.project != project
    = render partial: 'show_inherited_from_project', locals: { project_name: package.project.name, package_name: package.name }

  - if package.developed_packages.present?
    = render partial: 'show_developed_packages', locals: { developed_packages: package.developed_packages }

  - if package.is_patchinfo?
    = render partial: 'show_patchinfo', locals: { package: package, project: project }

  - if package.linking_packages.present?
    %li
      %i.fas.fa-info-circle.text-info
      = package.linking_packages.size
      = link_to('derived packages', linking_packages_path(project: project, package: package), remote: true)
  - if linkinfo
    - linked_package = linkinfo[:package]
    %li
      %i.fas.fa-link.text-dark
      Links to
      - if linkinfo[:remote_project]
        remote
        %i
          = linkinfo[:remote_project]
          \/
          = linked_package
      - else
        = project_or_package_link(project: linked_package.project.name, package: linked_package.name, short: true)
    - if linkinfo[:error]
      %li
        %i.fas.fa-times-circle.text-danger
        Link has errors:
        %i= linkinfo[:error]
    - elsif linkinfo[:diff]
      %li
        %i.fas.fa-info-circle.text-info
        Has a
        = link_to('link diff', package_rdiff_path(oproject: linked_package.project.name, opackage: linked_package.name,
                                                  project: project, package: package, rev: revision))

  = render partial: 'extra_actions', locals: { project: project, package: package }
