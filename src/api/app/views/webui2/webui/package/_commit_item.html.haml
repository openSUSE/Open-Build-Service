- commit = @package.commit(rev.to_s)
- if commit
  - if commit['user'] == '_service'
    = image_tag('icons/cog')
    automatic update by service
  - else
    - user = User.find_by_login commit['user']
    - if user
      - realname = user.realname
      = user_icon(user)
      - unless realname.empty?
        = link_to(realname + ' (' + user.login + ')', user_show_path(user))
      - else
        = link_to(user.login, user_show_path(user))
    - else
      %i= commit['user'] || '-'
    - if commit['requestid']
      accepted #{link_to("request #{commit['requestid']}", {:controller => :request, :action => :show, :number => commit['requestid']})}
    - else
      committed
  - time = Time.at(commit['time'].to_i)
  = fuzzy_time(time)
  (revision #{commit['rev']})
  - unless commit['user'] == '_service' || commit['comment'].blank?
    %pre.plain= commit['comment']
  %ul.nav
    - if commit['rev'] != '1'
      %li.nav-item
        = link_to(image_tag('icons/brick') + ' Files changed', {:controller => :package, :action => :rdiff, :package => @package, :project => @project, :rev => commit['rev'], :linkrev => 'base'}, class: 'nav-link')
    %li.nav-item
      = link_to(image_tag('folder_go.png') + ' Browse Source', {:action => 'show', :project => @project, :package => @package, :rev => commit['rev']}, class: 'nav-link')
- else
  %i
    Revision #{rev.to_s} not found
