.card-body
  - unless @files.blank?
    %table.table.table-striped.table-bordered.table-responsive.table-sm.dt-responsive.nowrap#files-table
      %thead
        %tr
          %th Filename
          %th Size
          %th Changed
          %th{ style: "width: 1%" } Actions
      %tbody
        - @files.each do |file|
          %tr{ id: "file-#{valid_xml_id(file[:name])}" }
            %td
              - link_opts = {action: :view_file, project: @project, package: @package, filename: file[:name], expand: @expand}
              - unless @is_current_rev
                - link_opts[:rev] = file[:srcmd5]
              = link_to_if(file[:viewable], nbsp(file[:name]), link_opts)
            %td
              %span{ style: "display: none" }= file[:size].rjust(10, '0')
              = human_readable_fsize(file[:size])
            %td
              %span{ style: "display: none" }= file[:mtime]
              = fuzzy_time_string(Time.at(file[:mtime].to_i).to_s)
            / limit download for anonymous user to avoid getting killed by crawlers
            %td.text-center
              - if !User.current.is_nobody? || file[:size].to_i < (4 * 1024 * 1024)
                = link_to(file_url(@project.name, @package.name, file[:name], file[:srcmd5]), title: 'Download file') do
                  %i.fas.fa-arrow-circle-down.text-secondary
              - unless file[:name] =~ /^_service:/
                - if User.current.can_modify? @package
                  = link_to({ action: :remove_file, project: @project.to_param, package: @package.to_param, filename: file[:name]},
                    { data: {confirm: "Really remove file '#{file[:name]}'?"}, method: :post, title: 'Remove file' }) do
                    %i.fas.fa-times-circle.text-danger

    :javascript
      $(document).ready(function() {
        $('#files-table').dataTable({
          'columns': [null, null, null, {'orderable': false}],
        });
      });
  - else
    %i This package has no files yet
  - if User.current.can_modify? @package
    .pt-4
      = link_to(package_add_file_path(@project, @package)) do
        %i.fas.fa-plus-circle.text-primary
        Add file
- unless @files.blank? || @spider_bot
  - if @revision.present?
    - unless @is_current_rev
      %h5.card-header.border-top
        Revision #{@revision} (latest revision is #{@current_rev})
    - else
      %h5.card-header.border-top Latest Revision
    .card-body
      = render partial: 'commit_item', locals: { revision: @revision, commit: @package.commit(@revision) }
  - elsif @srcmd5
    %h5
      Source MD5 is #{@srcmd5} (latest revision is #{@current_rev})
