.list-group-item.px-0.px-md-1.py-3
  .row
    .col-auto.pe-0
      .form-check
        = check_box_tag('notification_ids[]', @notification.id, false,
                        id: "notification_ids_#{@notification.id}", class: 'form-check-input')
        = label_tag("notification_ids_#{@notification.id}", '', class: 'form-check-label')
    .col-10
      .row
        .col
          = notification_icon
          - if @notification.link_path.present?
            = link_to(@notification.link_text, @notification.link_path, class: 'mx-1')
          - else
            %span.fst-italic.mx-1
              = @notification.link_text
          %small.text-nowrap
            = render TimeComponent.new(time: @notification.created_at)
          - if @notification.notifiable_type == 'BsRequest'
            = helpers.bs_request_state_badge(@notification.notifiable.state)
          - if @notification.notifiable_type == 'WorkflowRun'
            = render WorkflowRunStatusBadgeComponent.new(status: @notification.notifiable.status, css_class: 'ms-1')
          - if @notification.notifiable_type == 'Report' && count_of_additional_reports_for_reportable >= 1
            %span.badge.text-bg-info.ms-1
              +#{count_of_additional_reports_for_reportable}
              = 'Report'.pluralize(count_of_additional_reports_for_reportable)
          - if @notification.notifiable_type == 'Report'
            - if @notification.notifiable.decision.present?
              %span.badge.text-bg-success.ms-1
                %i.fas.fa-gavel.me-1
                Decided
            - else
              %span.badge.text-bg-warning.ms-1
                %i.fas.fa-hourglass-half.me-1
                Awaits decision
        .col-auto.actions.ms-auto.align-self-end.align-self-md-start
          = render NotificationMarkButtonComponent.new(@notification, @selected_filter, @page)
      .row.mt-1.ps-sm-4
        .col-auto.pe-0
          %ul.list-inline.d-flex.flex-row-reverse.avatars.m-0
            = helpers.hidden_avatars(@notification)
            - helpers.avatars_to_display(@notification.avatar_objects).each do |avatar_object|
              %li.list-inline-item
                = helpers.avatars(avatar_object)
        .col-auto.ps-xs-2
          .smart-overflow= description
      .row.d-none.d-md-block.ps-4
        .col
          %p.mt-3.mb-0= helpers.render_without_markdown(helpers.truncate_to_first_new_line(@notification.excerpt))
