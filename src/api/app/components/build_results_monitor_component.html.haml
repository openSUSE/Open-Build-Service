.row.mb-4.mt-2
  .col-md-12
    = render partial: 'webui/request/build_results_filters', locals: { package_names:package_names,
                                                                       repository_names: repository_names,
                                                                       architecture_names: architecture_names,
                                                                       status_names: status_names,
                                                                       filter_url: filter_url,
                                                                       filters: filters }

.accordion#build-results-monitor
  - filtered_package_names.each do |package_name|
    .accordion-item
      .accordion-header
        .accordion-button.p-3.collapsed{ "aria-controls" => "collapse-#{package_name.gsub(':', '_')}",
                                         "aria-expanded" => "false", "data-bs-target" => "#collapse-#{package_name.gsub(':', '_')}",
                                         "data-bs-toggle" => "collapse",
                                         type: "button" }
          .w-100.d-flex.flex-wrap.justify-content-between.pe-3
            %span.text-break.me-2
              = package_name
            %span.text-end
              - results_count_per_package_and_category(package_name).each do |key, value|
                = render partial: 'webui/shared/build_status_count_badge', locals: { category: key, count: value.to_s }

      .accordion-collapse.collapse{ id: "collapse-#{package_name.gsub(':', '_')}", class: show }
        .list-group.list-group-flush.rounded-bottom
          - filtered_repository_names.each do |repository_name|
            .list-group-item.d-flex.justify-content-between
              = link_to(helpers.word_break(repository_name, 22),
                        project_package_repository_binaries_path(project_name: project_name,
                                                                 package_name: package_name,
                                                                 repository_name: repository_name),
                        title: "Binaries for #{repository_name}")
              %span.text-end
                - results_per_package_and_repository(package_name, repository_name).each do |result|
                  = render partial: 'webui/shared/build_status_badge', locals: { status: result[:status],
                                                                                 text: "#{result[:architecture]} : #{repository_status(result)}" ,
                                                                                 url: live_build_log_url(result[:status],
                                                                                                         project_name,
                                                                                                         package_name,
                                                                                                         repository_name,
                                                                                                         result[:architecture]) }
