<% @pagetitle = "Add New Package Branch" %>
<% project_bread_crumb @pagetitle %>

<%= render :partial => 'tabs' %>

<h2><%= @pagetitle %> to <%= @project.name %></h2>

<p>By branching a package from another project you add the package and its files
to your project in a transparent way. Changes of the files in the original
project will also change the files in the branched package in your project.</p>
<p>You can add patches to the branched package without affecting the original
package.</p>
<% unless @remote_projects.empty? %>
  <p>
    Branches also work across interconnected OBS instances. This OBS has
    <%= pluralize(@remote_projects.count, 'interconnect.', 'interconnects.') %>
  </p>
  <ul>
  <% @remote_projects.each do |id,name,title| %>
      <li><%= link_to("#{name}: #{title}", { controller: 'project', action: 'show', project: name}, {:class => 'project'}) %></li>
  <% end %>
  </ul>
<% end %>
<%= form_tag controller: "package", action: "save_new_link", project: @project.name do %>
<p>
  <strong>Name of original project:</strong><br/>
  <%= text_field_tag 'linked_project', @linked_project, :size => 80, :id => 'linked_project' %><br/>
  <strong>Name of package in original project:</strong><br/>
  <%= text_field_tag 'linked_package', @linked_package, :size => 80, :id => 'linked_package' %><br/>
  <strong>Name of branched package in target project:</strong> (Leave blank to use the
  same name as in the original project) <br/>
  <%= text_field_tag 'target_package', @target_package, :size => 80 %><br/>
  <%= check_box_tag 'current_revision', false %>Stay on current revision, don't merge future upstream changes automatically
  <%= hidden_field_tag 'branch', true %>
</p>
<p><%= submit_tag "Create Branch" %></p>
<% end %>

<%= javascript_tag do %>
  $("#linked_project").autocomplete({source: '<%= url_for :controller => :project, :action => :autocomplete_projects %>', minLength: 2});
  $("#linked_package").autocomplete({
    source: 
    function (request, response) {
      $.ajax({
        url: '<%= url_for :controller => 'project', :action => 'autocomplete_packages' %>',
        data: {
          project: $('#linked_project').val(),
          term: request.term,
        },
        success: function(data) {
          response($.map(data, function(item) { return { label: item, value: item } }));
        },
      });
    },
    minLength: 2,
  });
<% end %>
