.CodeMirror {
  font-family: monospace;
}

.CodeMirror-scroll {
  overflow: auto;
  height: 300px;
  /* This is needed to prevent an IE[67] bug where the scrolled content
     is visible outside of the scrolling box. */
  position: relative;
}

.CodeMirror-gutter {
  position: absolute; left: 0; top: 0;
  z-index: 10;
  min-width: 2em;
  height: 100%;
}
.CodeMirror-gutter-text {
  color: #aaa;
  text-align: right;
  padding: .4em .2em .4em .4em;
  white-space: pre !important;
}
.CodeMirror-lines {
  padding: .4em;
}

.CodeMirror pre {
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  border-width: 0; background: transparent;
  font-family: inherit;
  font-size: 1em;
  padding: 0.1em;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  /* We inherit 'overflow: auto;' from the Bento CSS theme. Both v8 and webkit engines thus
   * render garbage scrollbars. Setting to hidden is ok here, the '.CodeMirror pre' elements
   * aren't supposed to be scrollable... */
  overflow: hidden;
}

.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
}
.CodeMirror-wrap .CodeMirror-scroll {
  overflow-x: hidden;
}

.CodeMirror textarea {
  outline: none !important;
}

.CodeMirror pre.CodeMirror-cursor {
  z-index: 10;
  position: absolute;
  visibility: hidden;
  border-left: 1px solid black;
  border-right:none;
  width:0;
}
.CodeMirror pre.CodeMirror-cursor.CodeMirror-overwrite {}
.CodeMirror-focused pre.CodeMirror-cursor {
  visibility: visible;
}

div.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused div.CodeMirror-selected { background: #d7d4f0; }

.CodeMirror-searching {
  background: #ffa;
  background: rgba(255, 255, 0, .4);
}

/* Default theme */

.cm-s-default span.cm-keyword {color: #708;}
.cm-s-default span.cm-atom {color: #219;}
.cm-s-default span.cm-number {color: #164;}
.cm-s-default span.cm-def {color: #00f;}
.cm-s-default span.cm-variable {color: black;}
.cm-s-default span.cm-variable-2 {color: #05a;}
.cm-s-default span.cm-variable-3 {color: #085;}
.cm-s-default span.cm-property {color: black;}
.cm-s-default span.cm-operator {color: black;}
.cm-s-default span.cm-comment {color: gray;}
.cm-s-default span.cm-string {color: #a11;}
.cm-s-default span.cm-string-2 {color: #f50;}
.cm-s-default span.cm-meta {color: #555;}
.cm-s-default span.cm-error {color: #f00;}
.cm-s-default span.cm-qualifier {color: #555;}
.cm-s-default span.cm-builtin {color: #30a;}
.cm-s-default span.cm-bracket {color: #cc7;}
.cm-s-default span.cm-tag {color: #170;}
.cm-s-default span.cm-attribute {color: #00c;}
.cm-s-default span.cm-header {color: #a0a;}
.cm-s-default span.cm-quote {color: #090;}
.cm-s-default span.cm-hr {color: #999;}
.cm-s-default span.cm-link {color: #00c;}

span.cm-header, span.cm-strong {font-weight: bold;}
span.cm-em {font-style: italic;}
span.cm-emstrong {font-style: italic; font-weight: bold;}
span.cm-link {text-decoration: underline;}

div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}

/* Diff mode */
.cm-s-default span.cm-rangeinfo {color: #18b2b2;}
.cm-s-default span.cm-minus {color: red;}
.cm-s-default span.cm-plus {color: green;}

/* Spec mode */
.cm-s-default span.cm-preamble {color: #b26818; font-weight: bold;}
.cm-s-default span.cm-macro {color: #b218b2;}
.cm-s-default span.cm-section {color: green; font-weight: bold;}
.cm-s-default span.cm-script {color: red;}
.cm-s-default span.cm-issue {color: yellow;}

/* CodeMirror-UI */
.codemirror-ui-button-frame {
  border-top:1px solid #ccc;
  border-left:1px solid #ccc;
  border-right:1px solid #ccc;
  background:#eee;
  position:relative;
}
/*.codemirror-ui-button-frame input,.codemirror-ui-button-frame label {
  font-size:0.6em;
}*/
.codemirror-ui-button-frame label input {
  margin:0px 2px;
  vertical-align:middle;
}
.codemirror-ui-button-frame label {
  padding:0px;
  margin:2px 5px;
  margin-top:0px;
  display:inline-block;
}
input.codemirror-ui-checkbox {
}
.codemirror-ui-button {
  display:block;
  float:left;
  padding:3px;
  line-height:0;
  margin:1px;
  margin-right:0px;
}
.codemirror-ui-button:hover {
  padding:2px;
  border:1px solid #ccc;
}
.codemirror-ui-button img {
  line-height:0;
}
.codemirror-ui-button.inactive {
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
  opacity: .5;
}
.codemirror-ui-wrap {
  float:right;
}
.codemirror-find-replace {
  border:1px solid black;
  background : #ddd;
  padding:10px;
  position:absolute;
  width:300px;
  top:0%;
  left:50%;
  margin-left:-150px;
}
iframe {
  /*border:1px solid green !important;*/
}
.codemirror-ui-find-bar {
  text-align:center;
}
.codemirror-ui-popup-find-wrap {
  position:absolute;
  bottom:100%;
  left:-1px;
  border:1px solid #ccc;
  background:#eee;
  padding:2px 5px;
  border-bottom:0px;
  margin-bottom:-1px;
  display:none;
}
.codemirror-ui-popup-find-wrap.active {
  display:block;
}
.codemirror-ui-popup-find-wrap .codemirror-ui-button {
  float:left;
}
.codemirror-ui-popup-find-wrap .codemirror-ui-find-bar {
  float:left;
}
.CodeMirror {
  border:1px solid #ccc;
  background:white;
}
/*
 * This lets us make sure that the fancy-tab-gutter will always enclose the tabs inside it.
 * We're namspcing it since many frameworks include a .clearfix rule of somesort.
 */
.codemirror-ui-clearfix:after {
  visibility: hidden;
  display: block;
  font-size: 0;
  content:"\0020";
  clear: both;
  height: 0;
}
.codemirror-ui-clearfix { display: inline-block; }
/* start commented backslash hack \*/
* html .codemirror-ui-clearfix { height: 1%; }
.codemirror-ui-clearfix { display: block; }
/* close commented backslash hack */
