<%= javascript_tag do %>
  function updateSupersedeAndDevelPackageDisplay() {
    if ($('#targetproject')[0].value.length > 0) {
      if ($('#targetproject')[0].value == $('#sourceproject')[0].value) {
        $('#sourceupdate_display').hide();
        $('#sourceupdate').disable(); // hide 'sourceupdate' from Ruby
      } else {
        $('#sourceupdate_display').show();
        $('#sourceupdate').enable();
      }
      $.ajax({
        url: '<%= url_for(:controller => "request", :action => "list_small") %>',
        data: {
          project: $('#targetproject').attr('value'),
          package: $('#package').attr('value'),
          types: 'submit',
          states: 'new,review,declined',
        },
        success: function(data) {
          if (data.indexOf('No requests') == -1) {
            $('#supersede_display').show();
            $('#supersede').attr('checked', true);
            $('#pending_requests').html(data);
          } else {
            $('#supersede_display').hide();
            $('#supersede').attr('checked', false);
          }
        }
      })
      $.ajax({
        url: '<%= url_for(:controller => "package", :action => "devel_project") %>',
        data: {
          project: $('#targetproject')[0].value,
          package: $('#package')[0].value,
        },
        success: function(data) {
          if (data.length > 0 && data != '<%= @project.to_s %>') {
            $('#devel_project_warning').show();
            $('#devel_project_name').html(data);
          } else {
            $('#devel_project_warning').hide();
          }
        }
      })
    }
  };

  $('#devel_project_name').click(function() { $('#targetproject').attr('value', $('#devel_project_name').html()); });

  updateSupersedeAndDevelPackageDisplay();

  $('#targetproject').autocomplete({
    source: '<%= url_for :controller => :project, :action => :autocomplete_projects %>',
    minLength: 2,
    select: updateSupersedeAndDevelPackageDisplay,
    change: updateSupersedeAndDevelPackageDisplay,
  });
  /*$("#targetpackage").autocomplete('<%= url_for :controller => :project, :action => :autocomplete_packages %>', {
    minChars: 0, matchCase: true, max: 50, extraParams: {project: function() { return $("#target_project").val(); }}
  });*/
<% end %>

<div>
  <div class="dialog" id="disable_mask"></div>
  <div class="dialog darkgrey_box">
    <div class="box box-shadow">
      <h2 class="box-header">Create Submit Request</h2>

      <p>Do you want to submit <%= render :partial => 'shared/project_or_package_link', :locals => {:project => @project.value('name'), :package => @package.value('name'), :rev => @revision} %>?</p>

      <% tprj = "" %>
      <% tprj = @package.linkinfo.project if @package.linkinfo # fill in from linkinfo %>
      <% tprj = params[:targetproject] if params[:targetproject] # allow to override by parameter %>

      <%= form_tag({:controller => "package", :action => "submit_request"}, :method => "post") do %>
        <%= hidden_field_tag(:project, @project) %>
        <%= hidden_field_tag(:package, @package) %>
        <%= hidden_field_tag(:rev, @revision) %>
        <p>
          <%= label_tag(:sourceproject, "From source project:") %><br/>
          <%= text_field_tag(:sourceproject, elide(@project.name, 40), :size => 40, :disabled => true) %><br/>
          <%= label_tag(:targetproject, "To target project:") %><br/>
          <%= text_field_tag(:targetproject, tprj, :size => 40, :disabled => params[:readonly]) %><br/>
          <% if params[:readonly] %>
            <%= hidden_field_tag(:targetproject, tprj) %>
          <% end %>
          <% if params[:targetpackage] %>
            <%= label_tag(:targetpackage, "To target package:") %><br/>
            <%= text_field_tag(:targetpackage, params[:targetpackage], :size => 40, :disabled => params[:readonly]) %><br/>
            <% if params[:readonly] %>
              <%= hidden_field_tag(:targetpackage, params[:targetpackage]) %>
            <% end %>
          <% end %>
          <%= label_tag(:description, "Description:") %><br/>
          <%= text_area_tag(:description, "", :size => "40x3") %><br/>
          <span id="supersede_display" class="hidden">
            <%= label_tag(:pending_requests, "Pending requests:") %><br/>
            <span id="pending_requests"></span>
            <%= check_box_tag(:supersede) %> Supersede pending requests<br/>
          </span>
          <span id="sourceupdate_display">
            <%= check_box_tag(:sourceupdate, 'cleanup', @cleanup_source) %> Remove local package if request is accepted
          </span>
        </p>
        <p id="devel_project_warning" class="hidden">
          You are about to bypass the devel project, please submit to <b id="devel_project_name"></b> instead.
        </p>
        <div class="buttons">
          <%= submit_tag("Ok") %>
          <%= remove_dialog_tag('Cancel') %>
        </div>
      <% end %>
    </div>
  </div>
</div>
