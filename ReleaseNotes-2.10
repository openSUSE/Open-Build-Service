#
# Open Build Service 2.10
#

WARNING:
WARNING: This is a development release, not for production usage!
WARNING:




Please read the README.SETUP file for initial installation
instructions or use the OBS Appliance from

  http://openbuildservice.org/download/

There is also an install medium with installs OBS on hard disc now.

dist/README.UPDATERS file has informations for updaters.

OBS Appliance users who have setup their LVM can just replace
their appliance image without data loss. The migration will
happen automatically.


Features
========

Generic:

Frontend:
 * Improved UI/UX for package live build log:
    * Show a hint to know what is happening.
    * Clicking on the hint can starts or stop the loading of the content.
 * Do not show excluded entries in package build results by default.
 * Microsoft Azure cloud upload support
 * API routes for Amazon ec2 cloud feature
 * Refactored the view of the binaries page that before was just a list of links that
   pointed to the details page. Now you can download the files and upload images to
   the cloud directly from here.
 * Text fields are stored as 4 byte UTF-8 which allows to use emojis. To use this
   feature, switch database.yml to utf8mb4 encoding

Backend:

Shipment:

Bugfixes:

  * Binary view now shows correct data for multibuild packages
  * Source diffs with mixed encoding were causing failures when processing notification
    mails. This is fixed now.
  * Improved explanatory text for role changes on request review page.


Intentional changes:
====================

  * User login names are now prohibited to start with '_', '.', ':'. Please ensure that your OBS instance
    does not contain users that match this pattern. If they do, it's recommended to rename them.

  * Excluded entries in package build results are not shown by default anymore.

  * OBS is now using the lograge gem to generate production logs. We are now logging (in one line per request):
    * Timestamp
    * Request: Method + Controller + Action + Path + Params
    * Response status
    * Duration: Overall / View / DB
    * Remote IP
    * User login

  You can see an example of the output here:
    ```
    method=POST path=/comments format=js controller=Webui::CommentsController action=create status=200 duration=1436.57 view=77.25 db=13.92 params={"utf8"=>"âœ“", "commentable_type"=>"Project", "commentable_id"=>"1", "comment"=>{"body"=>"hola que tal"}, "commit"=>"Add comment"} host=127.0.0.1 time=2018-05-14 15:59:03 +0000 user=Admin
    ```

    This will condense the output generated, before it was something like this:

    ```
    Started POST "/" for 127.0.0.1 at 2012-03-10 14:28:14 +0100
    Processing by HomeController#index as HTML
      Rendered text template within layouts/application (0.0ms)
      Rendered layouts/_assets.html.erb (2.0ms)
      Rendered layouts/_top.html.erb (2.6ms)
      Rendered layouts/_about.html.erb (0.3ms)
      Rendered layouts/_google_analytics.html.erb (0.4ms)
    Completed 200 OK in 79ms (Views: 78.8ms | ActiveRecord: 0.0ms)
    ```
 * In previous releases it was possible to delete attributes through
   /source/<project>/_attribute/?namespace=OBS&name=VeryImportantProject (or similiar
   for packages). You need to follow the documentation now and the proper
   route is /source/<project>/_attribute/OBS:VeryImportantProject

 * GET '/attribute/:attribute' route responded with a 400 when the attribute type
   did not exist. It now returns a 404 status.

 * GET '/source/<project>/_attribute' allowed to filter by namespace. This was never
   documented and was removed now. '/_attribute' will return all attributes, while
   '/_attribute/:attribute' keeps returning only the given attribute (as documented)


Other changes
=============


Notes for systems using systemd:
================================

OBS is using init scripts, not systemd style .service files. This will stay until
we will switch from SLES 11 to SLES 12 as default production platform.

openSUSE installations may use systemd (instead of sysvinit) and it should work
in general. Not working are usages like:

 # rcobssrcserver status

You will only get the systemd status here.

Also stopping services may not kill all processes, which leads to abstract errors
when trying to restart them. We heard also about trashed MySQL databases when using
systemd.

To avoid these problems you need switch directory to avoid the systemd mapper:

 # cd /etc/init.d
 # ./obssrcserver status|stop|start
